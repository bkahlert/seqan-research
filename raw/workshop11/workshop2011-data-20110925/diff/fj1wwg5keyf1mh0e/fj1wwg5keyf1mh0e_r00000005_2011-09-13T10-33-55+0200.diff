diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.cpp ./sandbox/my_sandbox/apps/my_app/my_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.cpp	2011-08-23 10:02:31.000000000 +0200
+++ ./sandbox/my_sandbox/apps/my_app/my_app.cpp	2011-09-13 10:11:21.000000000 +0200
@@ -34,6 +34,7 @@
 
 #include <seqan/basic.h>
 #include <seqan/sequence.h>
+#include <seqan/file.h>
 
 #include <seqan/misc/misc_cmdparser.h>
 
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.cpp~ ./sandbox/my_sandbox/apps/my_app/my_app.cpp~
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.cpp~	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/my_sandbox/apps/my_app/my_app.cpp~	2011-09-13 10:11:21.000000000 +0200
@@ -0,0 +1,63 @@
+// ==========================================================================
+//                                   my_app
+// ==========================================================================
+// Copyright (c) 2006-2011, Knut Reinert, FU Berlin
+// All rights reserved.
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are met:
+//
+//     * Redistributions of source code must retain the above copyright
+//       notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above copyright
+//       notice, this list of conditions and the following disclaimer in the
+//       documentation and/or other materials provided with the distribution.
+//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
+//       its contributors may be used to endorse or promote products derived
+//       from this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
+// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+// DAMAGE.
+//
+// ==========================================================================
+// Author: Your Name <your.email@example.net>
+// ==========================================================================
+
+#include <seqan/basic.h>
+#include <seqan/sequence.h>
+
+#include <seqan/misc/misc_cmdparser.h>
+
+#include "my_app.h"
+
+using namespace seqan;
+
+// Program entry point
+int main(int argc, char const ** argv)
+{
+    // Setup command line parser.
+    CommandLineParser parser;
+    Options options;
+    setupCommandLineParser(parser, options);
+    
+    // Then, parse the command line and handle the cases where help display
+    // is requested or erroneous parameters were given.
+    int ret = parseCommandLineAndCheck(options, parser, argc, argv);
+    if (ret != 0)
+        return ret;
+    if (options.showHelp || options.showVersion)
+        return 0;
+    
+    // Finally, launch the program.
+    ret = mainWithOptions(options);
+    return ret;
+}
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.h ./sandbox/my_sandbox/apps/my_app/my_app.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.h	2011-08-23 10:02:31.000000000 +0200
+++ ./sandbox/my_sandbox/apps/my_app/my_app.h	2011-09-13 10:33:27.000000000 +0200
@@ -77,13 +77,13 @@
 void
 setupCommandLineParser(CommandLineParser & parser, Options const & options)
 {
-    addVersionLine(parser, "0.1");
+    addVersionLine(parser, "0.0.1");
     
     addTitleLine(parser, "**********************");
     addTitleLine(parser, "* my_app *");
     addTitleLine(parser, "**********************");
     addTitleLine(parser, "");
-    addTitleLine(parser, "(c) 2011 by Your Name <your.email@example.net>");
+    addTitleLine(parser, "(c) 2011 by my Name <my.email@example.net>");
 
     addUsageLine(parser, "[OPTIONS] TEXT+");
     
@@ -122,7 +122,18 @@
     for (TIterator it = begin(options.texts); it != end(options.texts); ++it) {
         std::cout << "  " << *it << std::endl;
     }
-    
+    TIterator it=begin(options.texts)
+		CharString str1=(*it);
+		File<Sync<> > myFile1;
+		if (!open(myFile1, str1, OPEN_WRONLY | OPEN_CREATE)) {
+			cout << "Could not open for writing file " << str1 << endl;
+			return 1;
+		}
+		++it;
+		CharString block1=(*it);
+		write(myFile1, block1, sizeof(block1));
+		close(myFile1);
+		
     return 0;
 }
 
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata/fj1wwg5keyf1mh0e_stats.txt -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/tba/projects/SeqAn/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.h~ ./sandbox/my_sandbox/apps/my_app/my_app.h~
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/my_app/my_app.h~	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/my_sandbox/apps/my_app/my_app.h~	2011-09-13 10:33:27.000000000 +0200
@@ -0,0 +1,129 @@
+// ==========================================================================
+//                                   my_app
+// ==========================================================================
+// Copyright (c) 2006-2010, Knut Reinert, FU Berlin
+// All rights reserved.
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are met:
+//
+//     * Redistributions of source code must retain the above copyright
+//       notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above copyright
+//       notice, this list of conditions and the following disclaimer in the
+//       documentation and/or other materials provided with the distribution.
+//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
+//       its contributors may be used to endorse or promote products derived
+//       from this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
+// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+// DAMAGE.
+//
+// ==========================================================================
+// Author: Your Name <your.email@example.net>
+// ==========================================================================
+
+#ifndef SANDBOX_MY_SANDBOX_APPS_MY_APP_MY_APP_H_
+#define SANDBOX_MY_SANDBOX_APPS_MY_APP_MY_APP_H_
+
+#include <seqan/basic.h>
+#include <seqan/sequence.h>
+
+#include <seqan/misc/misc_cmdparser.h>
+
+using namespace seqan;
+
+// ============================================================================
+// Forwards
+// ============================================================================
+
+// ============================================================================
+// Tags, Classes, Enums
+// ============================================================================
+
+struct Options
+{
+    bool showHelp;
+    bool showVersion;
+    int i;
+    String<CharString> texts;
+    
+    Options()
+    {
+        // Set defaults.
+        showHelp = false;
+        showVersion = false;
+        i = 0;
+    }
+};
+
+// ============================================================================
+// Metafunctions
+// ============================================================================
+
+// ============================================================================
+// Functions
+// ============================================================================
+
+void
+setupCommandLineParser(CommandLineParser & parser, Options const & options)
+{
+    addVersionLine(parser, "0.1");
+    
+    addTitleLine(parser, "**********************");
+    addTitleLine(parser, "* my_app *");
+    addTitleLine(parser, "**********************");
+    addTitleLine(parser, "");
+    addTitleLine(parser, "(c) 2011 by Your Name <your.email@example.net>");
+
+    addUsageLine(parser, "[OPTIONS] TEXT+");
+    
+	addSection(parser, "Main Options");
+	addOption(parser, CommandLineOption("i",  "integer",  "set an integer option", OptionType::Integer | OptionType::Label, options.i));
+    
+    requiredArguments(parser, 1);
+}
+
+int parseCommandLineAndCheck(Options & options,
+                             CommandLineParser & parser,
+                             int argc,
+                             char const ** argv)
+{
+    bool stop = !parse(parser, argc, argv);
+    if (stop)
+        return 1;
+    if (isSetLong(parser, "help")) {
+        options.showHelp = true;
+        return 0;
+    }
+    if (isSetLong(parser, "version")) {
+        options.showVersion = true;
+        return 0;
+    }
+    
+    options.texts = getArgumentValues(parser);
+
+	return 0;
+}
+
+int mainWithOptions(Options & options)
+{
+    typedef Iterator<String<CharString> >::Type TIterator;
+    std::cout << "Non-option Arguments:" << std::endl;
+    for (TIterator it = begin(options.texts); it != end(options.texts); ++it) {
+        std::cout << "  " << *it << std::endl;
+    }
+    
+    return 0;
+}
+
+#endif  // #ifndef SANDBOX_MY_SANDBOX_APPS_MY_APP_MY_APP_H_
