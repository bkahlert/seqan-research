diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x 'C:/Dokumente und Einstellungen/Johannes Krugel/Eigene Dateien/Arbeit/Seqan/misc/seqan_instrumentation/userdata/id.txt' -x misc/seqan_instrumentation/userdata/blcdihoxu16s53yo_stats.txt -x 'C:/Dokumente und Einstellungen/Johannes Krugel/Eigene Dateien/Arbeit/Seqan/misc/seqan_instrumentation/userdata/blcdihoxu16s53yo_stats.txt' -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x 'C:/Dokumente und Einstellungen/Johannes Krugel/Eigene Dateien/Arbeit/Seqan/misc/seqan_instrumentation/bin' -x misc/seqan_instrumentation/last_revision_copy -x 'C:/Dokumente und Einstellungen/Johannes Krugel/Eigene Dateien/Arbeit/Seqan/misc/seqan_instrumentation/last_revision_copy' -x misc/seqan_instrumentation/userdata -x 'C:/Dokumente und Einstellungen/Johannes Krugel/Eigene Dateien/Arbeit/Seqan/misc/seqan_instrumentation/userdata' ./misc/seqan_instrumentation/last_revision_copy/sandbox/tum/apps/ministellar/ministellar.cpp ./sandbox/tum/apps/ministellar/ministellar.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/tum/apps/ministellar/ministellar.cpp	2011-09-13 14:12:07.812500000 +0200
+++ ./sandbox/tum/apps/ministellar/ministellar.cpp	2011-09-13 14:13:04.156250000 +0200
@@ -86,56 +86,57 @@
 	// call the function find to obtain a swift hit
 	// TODO: uncomment the following line
 
-	find(finder, pattern, errorRate, (int) minimalLength);
+	while(find(finder, pattern, errorRate, (int) minimalLength)) {
 
-	// extract infixes from hit
-	// TODO: uncomment the following three lines
+        // extract infixes from hit
+        // TODO: uncomment the following three lines
 
-	typedef Infix<TSequence>::Type TInfix;
-	TInfix infix1 = infix(finder, seqs1[0]);
-	TInfix infix2 = infix(pattern, seqs2[0]);
-	
-	std::cout << "infix1 = " << infix1 << std::endl;
-	std::cout << "infix2 = " << infix2 << std::endl;
-	
-	// find best local alignment of infixes, and check for minimal score
-	// TODO: Define an align object and initialize it with the infixes. Find the best local
-	//       alignment of the infixes. Use the above defined scoring scheme. Make sure that
-	//       it reaches the minimal score minScore.
-	
-	typedef Infix<TSequence>::Type TInfix;
-    Align<TInfix, ArrayGaps> ali;
-    appendValue(rows(ali), infix1);
-    appendValue(rows(ali), infix2);
-    
-    TScoreValue scoreValue = localAlignment(ali, score, SmithWaterman());
-	std::cout << ali << std::endl;
-    if (scoreValue >= minScore) {
-        // create a seed for the local alignment, and conduct gapped X-drop extension
-        // TODO: Define a seed on the original sequences but for the subsequences of the local
-        //       alignment. Extend this seed in both directions using gapped X-drop extension.
-        //       Check that the extended seed has a length of at least minimalLength.
-        // HINT: Have a look at the Seed-and-Extend tutorial.
+        typedef Infix<TSequence>::Type TInfix;
+        TInfix infix1 = infix(finder, seqs1[0]);
+        TInfix infix2 = infix(pattern, seqs2[0]);
         
-        typedef Seed<Simple> TSeed;
-        TSeed seed(
-            beginPosition(infix1) + clippedBeginPosition(row(ali, 0)),
-            beginPosition(infix2) + clippedBeginPosition(row(ali, 1)),
-            beginPosition(infix1) + clippedEndPosition(row(ali, 0)),
-            beginPosition(infix2) + clippedEndPosition(row(ali, 1))
-            );
+        std::cout << "infix1 = " << infix1 << std::endl;
+        std::cout << "infix2 = " << infix2 << std::endl;
         
-        extendSeed(seed, xDrop, score, seqs1[0], seqs2[0], 2, GappedXDrop());
+        // find best local alignment of infixes, and check for minimal score
+        // TODO: Define an align object and initialize it with the infixes. Find the best local
+        //       alignment of the infixes. Use the above defined scoring scheme. Make sure that
+        //       it reaches the minimal score minScore.
         
-        if (minimalLength >= minimalLength) {
+        typedef Infix<TSequence>::Type TInfix;
+        Align<TInfix, ArrayGaps> ali;
+        appendValue(rows(ali), infix1);
+        appendValue(rows(ali), infix2);
+        
+        TScoreValue scoreValue = localAlignment(ali, score, SmithWaterman());
+        std::cout << ali << std::endl;
+        if (scoreValue >= minScore) {
+            // create a seed for the local alignment, and conduct gapped X-drop extension
+            // TODO: Define a seed on the original sequences but for the subsequences of the local
+            //       alignment. Extend this seed in both directions using gapped X-drop extension.
+            //       Check that the extended seed has a length of at least minimalLength.
+            // HINT: Have a look at the Seed-and-Extend tutorial.
             
-        }
- 
-        // find best global alignment of extended seed
-        // TODO: Compute the best global alignment of extended seed and its score.
-        // HINT: Create an align object on infixes of the sequences.
+            typedef Seed<Simple> TSeed;
+            TSeed seed(
+                beginPosition(infix1) + clippedBeginPosition(row(ali, 0)),
+                beginPosition(infix2) + clippedBeginPosition(row(ali, 1)),
+                beginPosition(infix1) + clippedEndPosition(row(ali, 0)),
+                beginPosition(infix2) + clippedEndPosition(row(ali, 1))
+                );
+            
+            //extendSeed(seed, xDrop, score, seqs1[0], seqs2[0], 2, GappedXDrop());
+            
+            if (minimalLength >= minimalLength) {
+                
+            }
+     
+            // find best global alignment of extended seed
+            // TODO: Compute the best global alignment of extended seed and its score.
+            // HINT: Create an align object on infixes of the sequences.
 
-        // TODO: Output the alignment as a match to the output file.
+            // TODO: Output the alignment as a match to the output file.
+        }
     }
 
 	outFile.close();
