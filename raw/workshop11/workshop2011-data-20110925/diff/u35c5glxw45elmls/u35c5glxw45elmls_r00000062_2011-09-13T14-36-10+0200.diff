diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/felix/BioStore/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/u35c5glxw45elmls_stats.txt -x /home/felix/BioStore/seqan-trunk/misc/seqan_instrumentation/userdata/u35c5glxw45elmls_stats.txt -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x /home/felix/BioStore/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/felix/BioStore/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/felix/BioStore/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/ministellar/ministellar.cpp ./sandbox/my_sandbox/apps/ministellar/ministellar.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/ministellar/ministellar.cpp	2011-09-13 14:23:19.000000000 +0200
+++ ./sandbox/my_sandbox/apps/ministellar/ministellar.cpp	2011-09-13 14:36:07.896270251 +0200
@@ -88,7 +88,7 @@
 	// TODO: uncomment the following line
 
     
-
+    
 	while (find(finder, pattern, errorRate, int(minimalLength))) {
 
 	// extract infixes from hit
@@ -129,14 +129,23 @@
                            beginPosition(infix2) + clippedEndPosition(row(aln, 1)));
 //        std::cout << "Seed:" << seed << std::endl;
         extendSeed(seed, seqs2[0], seqs1[0], EXTEND_BOTH, scoring, xDrop, GappedXDrop());
-        std::cout << length(seed) << std::endl;
-    }
-	// find best global alignment of extended seed
-	// TODO: Compute the best global alignment of extended seed and its score.
-	// HINT: Create an align object on infixes of the sequences.
+//        std::cout << length(seed) << std::endl;
 
-	// TODO: Output the alignment as a match to the output file.
+    	// find best global alignment of extended seed
+	    // TODO: Compute the best global alignment of extended seed and its score.
+	    // HINT: Create an align object on infixes of the sequences.
+
+        TInfix subseq1 = TInfix(seqs1[0], getBeginDim0(seed), getEndDim0(seed));
+        TInfix subseq2 = TInfix(seqs2[0], getBeginDim1(seed), getEndDim1(seed));
+        
+        assignSource(row(aln, 0), infix1);
+        assignSource(row(aln, 1), infix2);
+        
+        globalAlignment(aln, scoring);
 
+        outFile << aln << std:endl;
+	    // TODO: Output the alignment as a match to the output file.
+    }
 	outFile.close();
 
 	return 0;
