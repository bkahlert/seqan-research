diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata/id.txt' -x misc/seqan_instrumentation/userdata/amudto8y1mzxaebv_stats.txt -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata/amudto8y1mzxaebv_stats.txt' -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/bin' -x misc/seqan_instrumentation/last_revision_copy -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/last_revision_copy' -x misc/seqan_instrumentation/userdata -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata' ./misc/seqan_instrumentation/last_revision_copy/sandbox/mordor/apps/exastellar/exastellar.cpp ./sandbox/mordor/apps/exastellar/exastellar.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/mordor/apps/exastellar/exastellar.cpp	2011-09-13 12:36:54.000000000 +0200
+++ ./sandbox/mordor/apps/exastellar/exastellar.cpp	2011-09-13 12:41:25.338734696 +0200
@@ -30,6 +30,13 @@
     std::cout << infix(seq1, getBeginDim1(seed), getEndDim1(seed)) << std::endl;
 }
 
+template<typename TSeed, typename TSeq>
+void
+gffifySeed(TSeed & seed, TSeq const & seq0, TSeq const & seq1) {
+    std::cout << "Sequence 1\t" << getBeginDim0(seed) << "\t" << getEndDim0(seed) << std::endl;
+    std::cout << "Sequence 2\t" << getBeginDim1(seed) << "\t" << getEndDim1(seed) << std::endl;
+}
+
 int main(int argc, char const ** argv)
 {
 	if (argc != 3)
@@ -111,6 +118,7 @@
 	    appendValue( rows( storm ), infix( seq1[0], getBeginDim0( wind ), getEndDim0( wind ) ) );
 	    appendValue( rows( storm ), infix( seq2[0], getBeginDim1( wind ), getEndDim1( wind ) ) );
 	    the_score = globalAlignment( storm, judgement_of_carrion );
+	    gffifySeed( wind, seq1[0], seq2[1] );
 	    outFile << storm;
 	}
 
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata/id.txt' -x misc/seqan_instrumentation/userdata/amudto8y1mzxaebv_stats.txt -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata/amudto8y1mzxaebv_stats.txt' -x .svn -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/bin' -x misc/seqan_instrumentation/last_revision_copy -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/last_revision_copy' -x misc/seqan_instrumentation/userdata -x '/home/paul/Projects/2011 SeqAn Workshop/seqan/misc/seqan_instrumentation/userdata' ./misc/seqan_instrumentation/last_revision_copy/sandbox/mordor/apps/exastellar/exastellar.cpp~ ./sandbox/mordor/apps/exastellar/exastellar.cpp~
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/mordor/apps/exastellar/exastellar.cpp~	2011-09-13 12:33:56.000000000 +0200
+++ ./sandbox/mordor/apps/exastellar/exastellar.cpp~	2011-09-13 12:41:00.888734703 +0200
@@ -30,6 +30,13 @@
     std::cout << infix(seq1, getBeginDim1(seed), getEndDim1(seed)) << std::endl;
 }
 
+template<typename TSeed, typename TSeq>
+void
+gffifySeed(TSeed & seed, TSeq const & seq0, TSeq const & seq1) {
+    std::cout << "Sequence 1\t" << getBeginDim0(seed) << "\t" << getEndDim0(seed) << std::endl;
+    std::cout << "Sequence 2\t" << getBeginDim1(seed) << "\t" << getEndDim1(seed) << std::endl;
+}
+
 int main(int argc, char const ** argv)
 {
 	if (argc != 3)
@@ -103,14 +110,15 @@
 	    }
 	    
 	    Seed< Simple > wind( clippedBeginPosition( row( the_showdown, 0 ) ), clippedBeginPosition( row( the_showdown, 1 ) ), clippedEndPosition( row( the_showdown, 0 ) ), clippedEndPosition( row( the_showdown, 1 ) ) );  
-	    writeSeed( wind, seq1[0], seq2[0] );  	    
+	    //writeSeed( wind, seq1[0], seq2[0] );  	    
 	    extendSeed( wind, seq1[0], seq2[0], EXTEND_BOTH, judgement_of_carrion, xDrop, GappedXDrop() );
-	    writeSeed( wind, seq1[0], seq2[0] );
+	    //writeSeed( wind, seq1[0], seq2[0] );
 	    
 	    Align< TSequence > storm;
 	    appendValue( rows( storm ), infix( seq1[0], getBeginDim0( wind ), getEndDim0( wind ) ) );
 	    appendValue( rows( storm ), infix( seq2[0], getBeginDim1( wind ), getEndDim1( wind ) ) );
 	    the_score = globalAlignment( storm, judgement_of_carrion );
+	    
 	    outFile << storm;
 	}
 
