diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp ./sandbox/my_sandbox/apps/first_app/first_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-05 13:56:52.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-05 14:12:51.988272676 +0200
@@ -51,6 +51,32 @@
     }
     return 0;
 }
+
+template <typename TString, typename TPattern>
+void findPatternInReference(String<int> & hits,
+                            TString const & reference,
+                            TPattern const & pattern)
+{
+    // [A] Check whether pattern fits into the sequence.
+  if(length(pattern)>lenth(reference)
+    return;
+    // [B] Iterate over all positions at which the pattern might occur.
+    for(unsigned i=0;i<length(reference)-length(pattern)+1;i++)
+      bool isHit=true;
+    // [C] Evaluate all positions of the pattern until you find a mismatch or you have found a hit.
+    for (unsigned posPattern = 0; posPattern < length(pattern); ++posPattern)
+        {
+            if(pattern[posPattern] != reference[posPattern + pos])
+            {
+                isHit = false;
+                break;
+            }
+        }
+        // [D] Report begin position at which pattern matches the sequence.
+        if(isHit)
+            appendValue(hits, pos);
+    }
+
 int main()
 {
     // Definition of the used types.
