diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/CMakeLists.txt ./sandbox/SzMK/CMakeLists.txt
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/CMakeLists.txt	2012-09-04 13:33:25.000000000 +0200
@@ -0,0 +1,11 @@
+cmake_minimum_required (VERSION 2.6)
+project (seqan_sandbox_SzMK)
+
+# We have to register our own include directory here, though.
+seqan_setup_includes(include SeqAnSandboxSzmk)
+# SeqAnCore is added include in ../core/CMakeLists.txt.  We only have to
+# register that we want it here, too.  Same for SeqAnExtras.
+seqan_make_seqan_available(SeqAnCore)
+seqan_make_seqan_available(SeqAnExtras)
+
+seqan_add_all_subdirectories()  # include_directory(*)
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/CMakeLists.txt ./sandbox/SzMK/apps/CMakeLists.txt
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/apps/CMakeLists.txt	2012-09-04 13:33:25.000000000 +0200
@@ -0,0 +1,6 @@
+cmake_minimum_required (VERSION 2.6)
+project (seqan_sandbox_SzMK_apps)
+
+seqan_setup_apps(sandbox_SzMK_apps)  # Add meta target and make executables depend on it.
+
+seqan_add_all_subdirectories()  # include_directory(*)
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/CMakeLists.txt ./sandbox/SzMK/apps/test1_app/CMakeLists.txt
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/apps/test1_app/CMakeLists.txt	2012-09-04 13:34:00.000000000 +0200
@@ -0,0 +1,5 @@
+cmake_minimum_required (VERSION 2.6)
+project (sandbox_SzMK_apps_test1_app)
+
+# Update the list of file names below if you add source files to your application.
+seqan_add_executable(test1_app test1_app.cpp)
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/INFO ./sandbox/SzMK/apps/test1_app/INFO
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/INFO	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/apps/test1_app/INFO	2012-09-04 13:34:00.000000000 +0200
@@ -0,0 +1,21 @@
+Name: test1_app
+Author: Your Name <your.email@example.net>
+Maintainer: Your Name <your.email@example.net>
+License: GPL v3
+Copyright: 2008-2012, FU Berlin
+Status: under development
+Description: One-line description for app test1_app.
+ This is the long text description for the app.  You should wrap text to 78
+ characters and you have to wrap it to 80 characters.  The lines must have one
+ leading space.  Successive lines in this format will be word-wrapped when
+ displayed.  Leading space is stripped off.
+ .
+ Use empty lines with one dot to insert an empty line / break paragraphs.
+ .
+  Start lines with two spaces to make them display verbatim.  Lines that
+  cannot be displayed horizontally will be hard-wrapped (not at word bor-
+  ders), so maybe do your own hyphenation.
+ .
+ Do not use tab characters, their effect is not predictable.
+ .
+ The INFO file format is oriented after the Debian controfields format.
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/test1_app.cpp ./sandbox/SzMK/apps/test1_app/test1_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/apps/test1_app/test1_app.cpp	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/apps/test1_app/test1_app.cpp	2012-09-04 13:34:00.000000000 +0200
@@ -0,0 +1,150 @@
+// ==========================================================================
+//                                 test1_app
+// ==========================================================================
+// Copyright (c) 2006-2012, Knut Reinert, FU Berlin
+// All rights reserved.
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are met:
+//
+//     * Redistributions of source code must retain the above copyright
+//       notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above copyright
+//       notice, this list of conditions and the following disclaimer in the
+//       documentation and/or other materials provided with the distribution.
+//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
+//       its contributors may be used to endorse or promote products derived
+//       from this software without specific prior written permission.
+//
+// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
+// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
+// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
+// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
+// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
+// DAMAGE.
+//
+// ==========================================================================
+// Author: Your Name <your.email@example.net>
+// ==========================================================================
+
+#include <seqan/basic.h>
+#include <seqan/sequence.h>
+
+#include <seqan/arg_parse.h>
+
+// ==========================================================================
+// Classes
+// ==========================================================================
+
+// --------------------------------------------------------------------------
+// Class AppOptions
+// --------------------------------------------------------------------------
+
+// This struct stores the options from the command line.
+//
+// You might want to rename this to reflect the name of your app.
+
+struct AppOptions
+{
+    // Verbosity level.  0 -- quiet, 1 -- normal, 2 -- verbose, 3 -- very verbose.
+    int verbosity;
+
+    // The first (and only) argument of the program is stored here.
+    seqan::CharString text;
+
+    AppOptions() :
+        verbosity(1)
+    {}
+};
+
+// ==========================================================================
+// Functions
+// ==========================================================================
+
+// --------------------------------------------------------------------------
+// Function parseCommandLine()
+// --------------------------------------------------------------------------
+
+seqan::ArgumentParser::ParseResult
+parseCommandLine(AppOptions & options, int argc, char const ** argv)
+{
+    // Setup ArgumentParser.
+    seqan::ArgumentParser parser("test1_app");
+    // Set short description, version, and date.
+    setShortDescription(parser, "Put a Short Description Here");
+    setVersion(parser, "0.1");
+    setDate(parser, "July 2012");
+
+    // Define usage line and long description.
+    addUsageLine(parser, "[\\fIOPTIONS\\fP] \"\\fITEXT\\fP\"");
+    addDescription(parser, "This is the application skelleton and you should modify this string.");
+
+    // We require one argument.
+    addArgument(parser, seqan::ArgParseArgument(seqan::ArgParseArgument::STRING, "TEXT"));
+
+    addOption(parser, seqan::ArgParseOption("q", "quiet", "Set verbosity to a minimum."));
+    addOption(parser, seqan::ArgParseOption("v", "verbose", "Enable verbose output."));
+    addOption(parser, seqan::ArgParseOption("vv", "very-verbose", "Enable very verbose output."));
+
+    // Add Examples Section.
+    addTextSection(parser, "Examples");
+    addListItem(parser, "\\fBtest1_app\\fP \\fB-v\\fP \\fItext\\fP",
+                "Call with \\fITEXT\\fP set to \"text\" with verbose output.");
+
+    // Parse command line.
+    seqan::ArgumentParser::ParseResult res = seqan::parse(parser, argc, argv);
+
+    // Only extract  options if the program will continue after parseCommandLine()
+    if (res != seqan::ArgumentParser::PARSE_OK)
+        return res;
+
+    // Extract option values.
+    if (isSet(parser, "quiet"))
+        options.verbosity = 0;
+    if (isSet(parser, "verbose"))
+        options.verbosity = 2;
+    if (isSet(parser, "very-verbose"))
+        options.verbosity = 3;
+    seqan::getArgumentValue(options.text, parser, 0);
+
+    return seqan::ArgumentParser::PARSE_OK;
+}
+
+// --------------------------------------------------------------------------
+// Function main()
+// --------------------------------------------------------------------------
+
+// Program entry point.
+
+int main(int argc, char const ** argv)
+{
+    // Parse the command line.
+    seqan::ArgumentParser parser;
+    AppOptions options;
+    seqan::ArgumentParser::ParseResult res = parseCommandLine(options, argc, argv);
+
+    // If there was an error parsing or built-in argument parser functionality
+    // was triggered then we exit the program.  The return code is 1 if there
+    // were errors and 0 if there were none.
+    if (res != seqan::ArgumentParser::PARSE_OK)
+        return res == seqan::ArgumentParser::PARSE_ERROR;
+
+    std::cout << "EXAMPLE PROGRAM\n"
+              << "===============\n\n";
+    
+    // Print the command line arguments back to the user.
+    if (options.verbosity > 0)
+    {
+        std::cout << "__OPTIONS____________________________________________________________________\n"
+                  << '\n'
+                  << "VERBOSITY\t" << options.verbosity << '\n'
+                  << "TEXT     \t" << options.text << "\n\n";
+    }
+
+    return 0;
+}
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/demos/CMakeLists.txt ./sandbox/SzMK/demos/CMakeLists.txt
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/demos/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/demos/CMakeLists.txt	2012-09-04 13:33:25.000000000 +0200
@@ -0,0 +1,6 @@
+cmake_minimum_required (VERSION 2.6)
+project (seqan_sandbox_SzMK_demos)
+
+seqan_setup_demos(sandbox_SzMK_demos)  # Add meta target and make executables depend on it.
+
+seqan_add_all_executables(sandbox_SzMK_demos)
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata/nhujs8lup1jadajj_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/kielbasa/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/tests/CMakeLists.txt ./sandbox/SzMK/tests/CMakeLists.txt
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/SzMK/tests/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ ./sandbox/SzMK/tests/CMakeLists.txt	2012-09-04 13:33:25.000000000 +0200
@@ -0,0 +1,6 @@
+cmake_minimum_required (VERSION 2.6)
+project (seqan_sandbox_SzMK_tests)
+
+seqan_setup_tests(sandbox_SzMK_tests)  # Setup flags etc, add meta target.
+
+seqan_add_all_subdirectories()  # include_directory(*)
