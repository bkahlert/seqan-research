diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/phr0d30hyzmq0xri_stats.txt -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata/phr0d30hyzmq0xri_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/lienhard/apps/fragmentstore/fragmentstore.cpp ./sandbox/lienhard/apps/fragmentstore/fragmentstore.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/lienhard/apps/fragmentstore/fragmentstore.cpp	2012-09-05 13:02:36.000000000 +0200
+++ ./sandbox/lienhard/apps/fragmentstore/fragmentstore.cpp	2012-09-05 13:19:12.334695020 +0200
@@ -1,41 +1,10 @@
-// ==========================================================================
-//                               fragmentstore
-// ==========================================================================
-// Copyright (c) 2006-2012, Knut Reinert, FU Berlin
-// All rights reserved.
-//
-// Redistribution and use in source and binary forms, with or without
-// modification, are permitted provided that the following conditions are met:
-//
-//     * Redistributions of source code must retain the above copyright
-//       notice, this list of conditions and the following disclaimer.
-//     * Redistributions in binary form must reproduce the above copyright
-//       notice, this list of conditions and the following disclaimer in the
-//       documentation and/or other materials provided with the distribution.
-//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
-//       its contributors may be used to endorse or promote products derived
-//       from this software without specific prior written permission.
-//
-// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-// ARE DISCLAIMED. IN NO EVENT SHALL KNUT REINERT OR THE FU BERLIN BE LIABLE
-// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-// SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-// CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
-// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
-// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH
-// DAMAGE.
-//
-// ==========================================================================
-// Author: Your Name <your.email@example.net>
-// ==========================================================================
-
 #include <seqan/basic.h>
 #include <seqan/sequence.h>
-
 #include <seqan/arg_parse.h>
+#include <fstream>
+#include <iostream>
+#include <seqan/file.h>
+#include <seqan/store.h>
 
 // ==========================================================================
 // Classes
@@ -55,7 +24,7 @@
     int verbosity;
 
     // The first (and only) argument of the program is stored here.
-    seqan::CharString text;
+    seqan::CharString file;
 
     AppOptions() :
         verbosity(1)
@@ -76,16 +45,16 @@
     // Setup ArgumentParser.
     seqan::ArgumentParser parser("fragmentstore");
     // Set short description, version, and date.
-    setShortDescription(parser, "Put a Short Description Here");
+    setShortDescription(parser, "Fragment Store Example");
     setVersion(parser, "0.1");
     setDate(parser, "July 2012");
 
     // Define usage line and long description.
-    addUsageLine(parser, "[\\fIOPTIONS\\fP] \"\\fITEXT\\fP\"");
-    addDescription(parser, "This is the application skelleton and you should modify this string.");
+    addUsageLine(parser, "[\\fIOPTIONS\\fP] \"\\fIFILE\\fP\"");
+    addDescription(parser, "This is a fragmentstore example.");
 
     // We require one argument.
-    addArgument(parser, seqan::ArgParseArgument(seqan::ArgParseArgument::STRING, "TEXT"));
+    addArgument(parser, seqan::ArgParseArgument(seqan::ArgParseArgument::STRING, "FILE"));
 
     addOption(parser, seqan::ArgParseOption("q", "quiet", "Set verbosity to a minimum."));
     addOption(parser, seqan::ArgParseOption("v", "verbose", "Enable verbose output."));
@@ -93,8 +62,8 @@
 
     // Add Examples Section.
     addTextSection(parser, "Examples");
-    addListItem(parser, "\\fBfragmentstore\\fP \\fB-v\\fP \\fItext\\fP",
-                "Call with \\fITEXT\\fP set to \"text\" with verbose output.");
+    addListItem(parser, "\\fBfragmentstore\\fP \\fB-v\\fP \\fIfile.txt\\fP",
+                "Call with \\fIFILE\\fP set to \"file.txt\" with verbose output.");
 
     // Parse command line.
     seqan::ArgumentParser::ParseResult res = seqan::parse(parser, argc, argv);
@@ -110,7 +79,7 @@
         options.verbosity = 2;
     if (isSet(parser, "very-verbose"))
         options.verbosity = 3;
-    seqan::getArgumentValue(options.text, parser, 0);
+    seqan::getArgumentValue(options.file, parser, 0);
 
     return seqan::ArgumentParser::PARSE_OK;
 }
@@ -134,17 +103,32 @@
     if (res != seqan::ArgumentParser::PARSE_OK)
         return res == seqan::ArgumentParser::PARSE_ERROR;
 
-    std::cout << "EXAMPLE PROGRAM\n"
+    std::cout << "Fragment Store EXAMPLE PROGRAM\n"
               << "===============\n\n";
     
     // Print the command line arguments back to the user.
-    if (options.verbosity > 0)
+    if (options.verbosity > 1)
     {
         std::cout << "__OPTIONS____________________________________________________________________\n"
                   << '\n'
                   << "VERBOSITY\t" << options.verbosity << '\n'
-                  << "TEXT     \t" << options.text << "\n\n";
+                  << "FILE     \t" << options.file << "\n\n";
     }
 
+    FragmentStore<> store;
+    std::ifstream file(toCString(options.file), std::ios_base::in | std::ios_base::binary);
+    read(file, store, Gtf());
+    // Create AnnotationTree iterator
+    Iterator<FragmentStore<>, AnnotationTree<> >::Type it;
+    it = begin(store, AnnotationTree<>());
+    // Move iterator one node down
+    goDown(it);
+    cout << it <<"\n";
+
+
+
+
     return 0;
 }
+
+
