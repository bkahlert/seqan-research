diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/qhuulr654q26tohr_stats.txt -x /home/Development/seqan-trunk/misc/seqan_instrumentation/userdata/qhuulr654q26tohr_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/robinson/apps/ws_journaling/ws_journaling.cpp ./sandbox/robinson/apps/ws_journaling/ws_journaling.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/robinson/apps/ws_journaling/ws_journaling.cpp	2012-09-05 13:58:31.000000000 +0200
+++ ./sandbox/robinson/apps/ws_journaling/ws_journaling.cpp	2012-09-05 14:15:02.254070895 +0200
@@ -5,41 +5,73 @@
 #include <seqan/stream.h>
 #include <seqan/basic.h>
 #include <seqan/sequence_journaled.h>
-
+#include <seqan/find.h>
 
 using namespace std;
 using namespace seqan;
 
+typedef String<Dna, Journaled<Alloc<> , SortedArray, Alloc<> > > TJournalString;
+typedef Host<TJournalString>::Type THost;
+typedef StringSet<TJournalString, Owner<JournaledSet> > TJournaledSet;
+
+template<typename TString, typename TPattern>
+void searchPattern(StringSet<String<int> > & hitSet,
+		StringSet<TString, Owner<JournaledSet> > const & journalSet,
+		TPattern const & pattern) {
+	typedef typename Host<TString>::Type THost;
+	// Check for valid initial state.
+	if (empty(globalReference(journalSet))) {
+		::std::cout << "No reference set. Aborted search!" << std::endl;
+		return;
+	}
+	// Reset the hitSet to avoid phantom hits coming from a previous search.
+	clear(hitSet);
+	resize(hitSet, length(journalSet) + 1);
+	// Access the reference sequence.
+	THost & globalRef = globalReference(journalSet);
+	// Search for pattern in the reference sequence.
+	findPatternInSequence(hitSet[0], globalRef, pattern);
+	// Search for pattern in the journaled sequences.
+	for (unsigned i = 0; i < length(journalSet); ++i)
+		findPatternInSequence(hitSet[i + 1], journalSet[i], pattern,
+				hitSet[0]);
+}
+
+template<typename TString, typename TPattern>
+void findPatternInSequence(String<int> & hits, TString const & referenceSeq,
+		TPattern const & patternSeq) {
+	Finder<TString> finder(referenceSeq);
+	Pattern<TPattern, Horspool> pattern(patternSeq);
+	while (find(finder, pattern))
+		++hits[beginPosition(finder)];
+}
+
 int main() {
-	typedef String<Dna, Journaled<Alloc<> , SortedArray, Alloc<> > >
-			TJournalString;
-	typedef Host<TJournalString>::Type THost;
-	typedef StringSet<TJournalString, Owner<JournaledSet> > TJournaledSet;
+
 	TJournaledSet journaledSet;
 
 	std::fstream stream("sequences.fasta", std::ios::binary | std::ios::in);
-	if (!stream.good()){
+	if (!stream.good()) {
 		cerr << "could not open file" << endl;
-		return 1;}
+		return 1;
+	}
 	// Read file.
 	RecordReader < std::fstream, SinglePass<> > reader(stream);
 
-
-
-
 	CharString id;
 	DnaString seq;
 
-	if (readRecord(id, seq, reader, Fasta())){
+	if (readRecord(id, seq, reader, Fasta())) {
 		cerr << "could not read reference" << endl;
-		return 1;}
+		return 1;
+	}
 	setGlobalReference(journaledSet, seq);
 
 	while (!readRecord(id, seq, reader, Fasta())) {
 		appendValue(journaledSet, seq);
 	}
 
-	for (unsigned i=0; i<length(journaledSet); ++i) {
+	for (unsigned i = 0; i < length(journaledSet); ++i) {
 		join(journaledSet, i, JoinConfig<GlobalAlign<JournaledCompact> > ());
 	}
 
