diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp ./sandbox/my_sandbox/apps/first_app/first_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 16:30:51.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 16:31:37.943411400 +0200
@@ -61,8 +61,8 @@
     // Print alignments using Iterators: Do the same as above, but use Iterators to iterate over the read list.
     // First, use Standard Iterators: Build two iterators {{{it}}} and {{{itEnd}}} to traverse {{{readList}}}.
    
-   Iterator<TDnaList>::Type it= begin(readList);
-   Iterator<TDnaList>::Type itEnd= end(readList);
+   Iterator<DnaList>::Type it= begin(readList);
+   Iterator<DnaList>::Type itEnd= end(readList);
    std::cout << " \n Print alignment using Standard Iterators: " << std::endl;
     for(; it != itEnd; goNext(it))
       {
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata/zsrreplh0s7rggp4_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/gabriel/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp~ ./sandbox/my_sandbox/apps/first_app/first_app.cpp~
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp~	2012-09-04 16:30:51.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp~	2012-09-04 16:31:37.915411603 +0200
@@ -60,8 +60,23 @@
     // Iterators :)
     // Print alignments using Iterators: Do the same as above, but use Iterators to iterate over the read list.
     // First, use Standard Iterators: Build two iterators {{{it}}} and {{{itEnd}}} to traverse {{{readList}}}.
-    
-    std::cout << " \n Print alignment using Standard Iterators: " << std::endl;
-
-    return 1;
+   
+   Iterator<TDnaList>::Type it= begin(readList);
+   Iterator<TDnaList>::Type itEnd= end(readList);
+   std::cout << " \n Print alignment using Standard Iterators: " << std::endl;
+    for(; it != itEnd; goNext(it))
+      {
+        // Get the right index for alignPosList
+        int i = position(it, readList);
+        // Temporary copy of begin and end position (beginPosition) from alignPosList
+        // of a given alignment between the read and the genome
+        unsigned beginPosition = alignPosList[i];
+        unsigned endPosition = beginPosition + length(value(it));
+        // Build Infix
+        Infix<DnaString>::Type genomeFragment = infix(chr1, beginPosition, endPosition);
+        // Call of our function to print the simple alignment
+        printAlign(genomeFragment, value(it));
+      }
+   
+  return 1;
 }
\ Kein Zeilenumbruch am Dateiende.
