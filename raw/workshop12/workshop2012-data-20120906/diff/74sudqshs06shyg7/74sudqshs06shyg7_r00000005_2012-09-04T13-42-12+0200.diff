diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/74sudqshs06shyg7_stats.txt -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata/74sudqshs06shyg7_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp ./sandbox/my_sandbox/apps/first_app/first_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 13:13:43.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 13:42:05.804115263 +0200
@@ -1,30 +1,36 @@
+// Copy the code into your current file and encapsulate the print instructions.
+
 #include <iostream>
 #include <seqan/file.h>
 #include <seqan/sequence.h>
 
-int main()
+int computeLocalScore(seqan::String<char> subText, seqan::String<char> pattern)
+{
+    int localScore = 0;
+    for (unsigned i = 0; i < seqan::length(pattern); ++i)
+        if (subText[i] == pattern[i])
+            ++localScore;
+    return localScore;
+}
+seqan::String<int> computeScore(seqan::String<char> text, seqan::String<char> pattern)
 {
-    // Initialization
-    seqan::String<char> text = "This is an awesome tutorial to get to know SeqAn!";
-    seqan::String<char> pattern = "tutorial";
     seqan::String<int> score;
-    resize(score, seqan::length(text));
-    // Computation of the similarities
-    // Iteration over the text (outer loop)
+    seqan::resize(score, seqan::length(text), 0);
     for (unsigned i = 0; i < seqan::length(text) - seqan::length(pattern) + 1; ++i)
-    {
-        int localScore = 0;
-        // Iteration over the pattern for character comparison
-        for (unsigned j = 0; j < seqan::length(pattern); ++j)
-        {
-            if (text[i + j] == pattern[j])
-                ++localScore;
-        }
-        score[i] = localScore;
-    }
-    // Printing the result
-    for (unsigned i = 0; i < seqan::length(score); ++i)
-        std::cout << score[i] << " ";
+        score[i] = computeLocalScore(infix(text, i, i + seqan::length(pattern)), pattern);
+    return score;
+}
+void print(seqan::String<int> text)
+{
+    for (unsigned i = 0; i < seqan::length(text); ++i)
+        std::cout << text[i] << " ";
     std::cout << std::endl;
+}
+int main()
+{
+    seqan::String<char> text = "This is an awesome tutorial to get to now SeqAn!";
+    seqan::String<char> pattern = "tutorial";
+    seqan::String<int> score = computeScore(text, pattern);
+    print(score);
     return 0;
 }
diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/74sudqshs06shyg7_stats.txt -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata/74sudqshs06shyg7_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/teo/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp~ ./sandbox/my_sandbox/apps/first_app/first_app.cpp~
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp~	2012-09-03 02:56:37.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp~	2012-09-04 13:13:43.987884341 +0200
@@ -1,11 +1,30 @@
 #include <iostream>
-#include <seqan/sequence.h>  // CharString, ...
-#include <seqan/file.h>      // to stream a CharString into cout
+#include <seqan/file.h>
+#include <seqan/sequence.h>
 
-int main(int, char const **)
+int main()
 {
-    std::cout << "Hello World!" << std::endl;
-    seqan::CharString mySeqanString = "Hello SeqAn!";
-    std::cout << mySeqanString << std::endl;
-    return 1;
+    // Initialization
+    seqan::String<char> text = "This is an awesome tutorial to get to know SeqAn!";
+    seqan::String<char> pattern = "tutorial";
+    seqan::String<int> score;
+    resize(score, seqan::length(text));
+    // Computation of the similarities
+    // Iteration over the text (outer loop)
+    for (unsigned i = 0; i < seqan::length(text) - seqan::length(pattern) + 1; ++i)
+    {
+        int localScore = 0;
+        // Iteration over the pattern for character comparison
+        for (unsigned j = 0; j < seqan::length(pattern); ++j)
+        {
+            if (text[i + j] == pattern[j])
+                ++localScore;
+        }
+        score[i] = localScore;
+    }
+    // Printing the result
+    for (unsigned i = 0; i < seqan::length(score); ++i)
+        std::cout << score[i] << " ";
+    std::cout << std::endl;
+    return 0;
 }
