diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/2vxgsg6iojmn3v52_stats.txt -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/userdata/2vxgsg6iojmn3v52_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /Users/Stroehli/Development/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp ./sandbox/my_sandbox/apps/first_app/first_app.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 10:32:37.000000000 +0200
+++ ./sandbox/my_sandbox/apps/first_app/first_app.cpp	2012-09-04 14:28:26.000000000 +0200
@@ -1,11 +1,62 @@
 #include <iostream>
-#include <seqan/sequence.h>  // CharString, ...
-#include <seqan/file.h>      // to stream a CharString into cout
+#include <seqan/file.h>
+#include <seqan/sequence.h>
+#include <seqan/score.h>
 
-int main(int, char const **)
+
+
+template <typename TText, typename TPattern>
+int computeLocalScore(TText const & subText, TPattern const & pattern)
+{
+    int localScore = 0;
+    for (unsigned i = 0; i < seqan::length(pattern); ++i)
+        if (subText[i] == pattern[i])
+            ++localScore;
+    return localScore;
+}
+
+template <typename TText>
+int computeLocalScore(TText const & subText, seqan::String<seqan::AminoAcid> const & pattern)
+{
+    int localScore = 0;
+    for (unsigned i = 0; i < seqan::length(pattern); ++i)
+        localScore += seqan::score(seqan::Blosum62(), subText[i], pattern[i]);
+    
+    return localScore;
+}
+
+template <typename TText, typename TPattern>
+seqan::String<int> computeScore(TText const & text, TPattern const & pattern)
+{
+    seqan::String<int> score;
+    seqan::resize(score, seqan::length(text), 0);
+    for (unsigned i = 0; i < seqan::length(text) - seqan::length(pattern) + 1; ++i)
+        score[i] = computeLocalScore(infix(text, i, i + seqan::length(pattern)), pattern);
+    return score;
+}
+
+void print(seqan::String<int> const & text)
+{
+    for (unsigned i = 0; i < seqan::length(text); ++i)
+        std::cout << text[i] << " ";
+    std::cout << std::endl;
+}
+
+
+template <typename TText>
+void print(TText const & text)
+{
+    std::cout << text << std::endl;
+}
+
+
+
+
+int main()
 {
-    std::cout << "Hello World!" << std::endl;
-    seqan::CharString mySeqanString = "Hello SeqAn!";
-    std::cout << mySeqanString << std::endl;
-    return 1;
+    seqan::String<char> text = "This is an awesome tutorial to get to now SeqAn!";
+    seqan::String<char> pattern = "tutorial";
+    seqan::String<int> score = computeScore(text, pattern);
+    print(score);
+    return 0;
 }
\ No newline at end of file
