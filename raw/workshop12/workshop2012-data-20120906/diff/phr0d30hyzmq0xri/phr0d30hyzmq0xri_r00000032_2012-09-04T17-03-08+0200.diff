diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/phr0d30hyzmq0xri_stats.txt -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata/phr0d30hyzmq0xri_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x /home/matthias/seqan/seqan-trunk/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/lienhard/apps/rna_seq/rna_seq.cpp ./sandbox/lienhard/apps/rna_seq/rna_seq.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/lienhard/apps/rna_seq/rna_seq.cpp	2012-09-04 16:57:37.000000000 +0200
+++ ./sandbox/lienhard/apps/rna_seq/rna_seq.cpp	2012-09-04 17:03:03.128102450 +0200
@@ -104,7 +104,30 @@
         createIntervalTree(intervalTrees[i], intervals[i]);
 }
 
-
+//
+// 5. Count reads per gene
+//
+void countReadsPerGene(String<unsigned> & readsPerGene, String<TIntervalTree> const & intervalTrees, TStore const & store)
+{
+    resize(readsPerGene, length(store.annotationStore), 0);
+    String<TId> result;
+    // iterate aligned reads and get search their begin and end positions
+    SEQAN_OMP_PRAGMA(parallel for private(result))
+    for (unsigned i = 0; i < length(store.alignedReadStore); ++i)
+    {
+        TAlignedRead const & ar = store.alignedReadStore[i];
+        TPos queryBegin = _min(ar.beginPos, ar.endPos);
+        TPos queryEnd = _max(ar.beginPos, ar.endPos);
+        // search read-overlapping genes
+        findIntervals(intervalTrees[ar.contigId], queryBegin, queryEnd, result);
+        // increase read counter for each overlapping annotation given the id in the interval tree
+        for (unsigned j = 0; j < length(result); ++j)
+        {
+            SEQAN_OMP_PRAGMA(atomic)
+            readsPerGene[result[j]] += 1;
+        }
+    }
+}
 
 int main(int argc, char const * argv[])
 {
@@ -112,6 +135,7 @@
     TStore store;
     String<String<TInterval> > intervals;
     String<TIntervalTree> intervalTrees;
+    String<unsigned> readsPerGene;
 
     ArgumentParser::ParseResult res = parseOptions(options, argc, argv);
     if (res != ArgumentParser::PARSE_OK)
@@ -120,7 +144,7 @@
         return 1;
     extractGeneIntervals(intervals, store);
     constructIntervalTrees(intervalTrees, intervals);
-
+    countReadsPerGene(readsPerGene, intervalTrees, store);
     return 0;
 }
 
