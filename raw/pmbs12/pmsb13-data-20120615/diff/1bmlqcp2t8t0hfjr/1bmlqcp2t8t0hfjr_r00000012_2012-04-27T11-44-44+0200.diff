diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/1bmlqcp2t8t0hfjr_stats.txt -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/userdata/1bmlqcp2t8t0hfjr_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/Bobby/seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/arsenew/demos/arsenew_first.cpp ./sandbox/arsenew/demos/arsenew_first.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/arsenew/demos/arsenew_first.cpp	2012-04-26 23:35:22.450100900 +0200
+++ ./sandbox/arsenew/demos/arsenew_first.cpp	2012-04-27 11:44:36.586316000 +0200
@@ -1,33 +1,99 @@
+// ==========================================================================
+//                                  msplazer
+// ==========================================================================
+// Copyright (c) 2011, Kathrin Trappe, FU Berlin
+// All rights reserved.
+//
+// Redistribution and use in source and binary forms, with or without
+// modification, are permitted provided that the following conditions are met:
+//
+//     * Redistributions of source code must retain the above copyright
+//       notice, this list of conditions and the following disclaimer.
+//     * Redistributions in binary form must reproduce the above copyright
+//       notice, this list of conditions and the following disclaimer in the
+//       documentation and/or other materials provided with the distribution.
+//     * Neither the name of Knut Reinert or the FU Berlin nor the names of
+//       its contributors may be used to endorse or promote products derived
+//       from this software without specific prior written permission.
+//
+//
+// ==========================================================================
+// Author: Kathrin Trappe <ktrappe@inf.fu-berlin.de>
+// ==========================================================================
+
+#include <seqan/basic.h>
 #include <seqan/sequence.h>
-#include <iostream>
+//#include <seqan/graph_algorithms.h>
+
+#include <seqan/misc/misc_cmdparser.h>
 
+#include "../../../../core/apps/stellar/stellar.h"
+//#include "../../../../core/apps/stellar/stellar_output.h"
 
+//#include "stellar_routines.h"
+//#include "create_stellarmatches_from_file.h"
+#include "msplazer.h"
+//#include "msplazer_algorithms.h"
+//#include "msplazer_out.h"
+#include "msplazer_main.h"
 
 using namespace seqan;
 
-void countOneMers(CharString const & Str) {
+// Program entry point
+int main(int argc, char const ** argv)
+{
+
+	double start = sysTime();
+	// command line parsing
+	CommandLineParser parser("msplazer");
+
+	_setParser(parser);
+	if (!parse(parser, argc, argv)) {
+		if (isSetShort(parser, 'h') || isSetShort(parser, 'v')) return 0; 
+		shortHelp(parser, std::cerr);
+		return 1;
+	}
 
-	String<int>table;
-	resize(table, 'z' - 'a' + 1, 0);
+	/////////////////////////////////////////////////////////////////////
+	//Initialisation
+	MSplazerOptions msplazerOptions = MSplazerOptions();
+
+	//Usage via fragmentStore
+	/*Stellar can now handle FragmentStore input which is based on an Index using a StringSet based on Owner<ConcatDirect<>>. 
+	  However, StellarMatch positions are wrong when processing multiple reads (i.e. after read 1).
+	  Maybe bc. of consecutive positions due to the ConcatDirect format?
+	*/
+	/*
+	   FragmentStore<void> fragments;
+	   bool success = loadReads(fragments, queryFilename);
+	   if(!success)
+	   cout << "Unable to open file from " << queryFilename << endl;
+	   for(unsigned i = 0; i < length(fragments.readSeqStore); ++i)
+	   cout << "Read " << i << " : " << fragments.readSeqStore[i] << endl;
+	   */	
+
+	//stellar parameters
+	//StellarOptions
+	StellarOptions stellarOptions = StellarOptions();
 
-	for (unsigned int i = 0; i < length(Str); ++i){
-		table[Str[i] - 'a'] += 1 ;
-		std::cout <<table[Str[i] - 'a'] ;
+	if (!_parseOptions(parser, stellarOptions, msplazerOptions)) {
+		return 1;
 	}
- 
-	
-	 for (unsigned int i = 0; i < 'z' - 'a' + 1; ++i) {
-        if (table[i] == 0)
-            continue;
-        std::cout << static_cast<char>('a' + i) << " " << table[i] << std::endl;
-    }
-}
+
+	msplazerOptions.databaseFile = stellarOptions.databaseFile;
+	msplazerOptions.queryFile = stellarOptions.queryFile;
 	
-int main() { 
+	_writeFileNames(stellarOptions);
+	_writeParams(msplazerOptions);
+
+    //msplazer wrapper function
+	msplazer(stellarOptions, msplazerOptions);
+	//msplazer(msplazerOptions) // If Stellar run is not necessary due to external match input
+
 
-	std:: cout<< "String: helloworld" << std::endl;
-	countOneMers("helloworld");
-	std:: cout << "Hello du"<< std::endl;
+	std::cout << "TIME all " <<	(sysTime() - start) << "s" << std::endl;
+
+	
 	return 0;
 }
 
