diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x D:/SeqAn/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/re2iaamwqjaf6msb_stats.txt -x D:/SeqAn/misc/seqan_instrumentation/userdata/re2iaamwqjaf6msb_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x D:/SeqAn/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x D:/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x D:/SeqAn/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x D:/SeqAn/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x D:/SeqAn/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/jennyann/apps/segmentaligner/segmentaligner.cpp ./sandbox/jennyann/apps/segmentaligner/segmentaligner.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/jennyann/apps/segmentaligner/segmentaligner.cpp	2012-05-11 02:29:09.896332300 +0200
+++ ./sandbox/jennyann/apps/segmentaligner/segmentaligner.cpp	2012-05-11 03:05:46.222955000 +0200
@@ -1,47 +1,29 @@
-#include <iostream>
-#include <seqan/sequence.h>
 #include <seqan/index.h>
 #include <seqan/misc/misc_cmdparser.h>
-#include "../../../core/apps/stellar/stellar.h"
-#include "../../../core/apps/stellar/stellar_types.h"
-#include "../../../core/apps/stellar/stellar_extension.h"
-#include "../../../core/apps/stellar/stellar_output.h"
 
 using namespace seqan;
 
-template<typename TSequence, typename TId>
-void stellar_find_matches(TSequence & file1,TId & databaseid, TSequence & file2, TId & queryid) {
-	double epsilon = 0.01;
-	unsigned minLength = 20;
-	unsigned xDrop = 2;
-
-	//Finder
-	typedef Finder<TSequence, Swift<SwiftLocal> > TFinder;
-    TFinder swiftFinder(file1, 1000, 1);
-
-	// pattern
-	StringSet<TSequence> sequences;
-    appendValue(sequences,file2);
-	typedef Index<StringSet<TSequence, Dependent<> >, IndexQGram<SimpleShape, OpenAddressing> > TQGramIndex;
-    Pattern<TQGramIndex, Swift<SwiftLocal> > swiftPattern(sequences);
-
-	StringSet<QueryMatches<StellarMatch<TSequence, TId> > > matches;
-
-	stellar(swiftFinder, swiftPattern, epsilon, minLength, xDrop, matches, AllLocal());
-
-}
-
-int main() {
-
-	typedef String<char> TSequence;
-	typedef CharString TId;
-	TSequence file1 = "AGTTGTTAGTCTACGTGGACCGACAAAGACAGATTCTTTGAGGGAGCTAAGCTCAACGTAGTTCTAACAG";
-	TId databaseid = "db";
-	TSequence file2 = "AGTTGTTAGTAAACGTGGACCGACAAAGACAGATTCTTTTTGGGAGCTAAGCTCAACGTAGTTCAAACAG";
-
-	TId queryid = "qr";
-
-
-	stellar_find_matches(file1, databaseid ,file2, queryid);
-
+int main()
+{
+	typedef CharString const file;
+	file fileName = "test1.fasta";
+
+	std::ifstream fasta(toCString(fileName), std::ios_base::in | std::ios_base::binary);
+    if (!fasta.good())
+        std::cerr << "Failed to open " << name << " file." << std::endl;
+        return false;
+    RecordReader<std::ifstream, SinglePass<> > reader(fasta);
+
+	CharString id;
+    Dna5String seq;
+
+	while (!atEnd(reader))
+    {
+        if (readRecord(id, seq, reader, Fasta()) != 0)
+        {
+            std::cerr << "ERROR reading FASTA." << std::endl;
+            return 1;
+        }
+        std::cout << id << "\t" << seq << "\n";
+    }
 }
\ No newline at end of file
