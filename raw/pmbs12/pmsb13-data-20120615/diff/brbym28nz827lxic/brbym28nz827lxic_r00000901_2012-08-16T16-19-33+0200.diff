diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-08-16 15:50:12.743706100 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-08-16 16:19:29.898306100 +0200
@@ -159,8 +159,8 @@
 double computeWk(int n,String<Cluster> &cluster);
 void computeReferenceData(String< std::map<unsigned int,std::map<Iupac,double> > > &Reference,unsigned allPWMsLength,unsigned PWMLength );
 void computeGapStat(String< std::map<unsigned int,std::map<Iupac,double> > > &allPWMs, String<Cluster> &observedCluster);
-void compute_l_quer(String< std::map<unsigned int,std::map<Iupac,double> > > &Reference, String<Cluster> &cluster, String<double> &l_quer_for_k,String<String<double> > &allWk,int B,unsigned allPWMsLength, unsigned PWMLength);
-void computeGap(String<double> &l_quer_for_k,String<Cluster> &observedCluster,String<double> &Gap,unsigned allPWMsLength);
+void compute_l_quer(String<Cluster> &cluster, String<double> &l_quer_for_k,String<String<double> > &allWk,unsigned i,int B,	unsigned allPWMsLength);
+	void computeGap(String<double> &l_quer_for_k,String<Cluster> &observedCluster,String<double> &Gap,unsigned allPWMsLength);
 void compute_sdk_and_sk(String<double> &sk,String<double> &l_quer_for_k,String<String<double> > &allWk,unsigned allPWMsLength,int B);
 
 
@@ -1038,7 +1038,9 @@
 	Wird B mal aufgerufen für verschiedene Data-Sets
 
 ***/
-void computeReferenceData(String< std::map<unsigned int,std::map<Iupac,double> > > &Reference,unsigned allPWMsLength,unsigned PWMLength ){
+void computeReferenceData(String< std::map<unsigned int,std::map<Iupac,double> > > &Reference,
+						  unsigned allPWMsLength,
+						  unsigned PWMLength ){
 
 	/***
 			Für jede Spalte eines PWMs Normalverteilte Zufallszahlen
@@ -1101,14 +1103,13 @@
 
 }
 
-void compute_l_quer(String< std::map<unsigned int,std::map<Iupac,double> > > &Reference, String<Cluster> &cluster, String<double> &l_quer_for_k,String<String<double> > &allWk,int B,unsigned allPWMsLength, unsigned PWMLength){
+void compute_l_quer(String<Cluster> &cluster, 
+					String<double> &l_quer_for_k,
+					String<String<double> > &allWk,
+					unsigned i,
+					int B,
+					unsigned allPWMsLength){
 
-	for(unsigned i=0;i<B;++i){
-
-		computeReferenceData( Reference,allPWMsLength, PWMLength );
-		
-		PWMClustering(Reference,cluster);
-		
 		for(unsigned k=0;k<allPWMsLength-1;++k){//addiert die log(Wk's) aller B-Referenz-Daten auf --> nur die Summe wird benötigt
 			
 			appendValue(allWk[i],cluster[k].Wk);
@@ -1124,14 +1125,14 @@
 			}
 		}
 
-		clear(Reference);
-		clear(cluster);
-
-	}
+		
 
 }
 
-void computeGap(String<double> &l_quer_for_k,String<Cluster> &observedCluster,String<double> &Gap,unsigned allPWMsLength){
+void computeGap(String<double> &l_quer_for_k,
+				String<Cluster> &observedCluster,
+				String<double> &Gap,
+				unsigned allPWMsLength){
 
 	std::cout<<"Gap"<<std::endl;
 	for(unsigned k=0;k<allPWMsLength-1;++k){
@@ -1142,7 +1143,11 @@
 
 }
 
-void compute_sdk_and_sk(String<double> &sk,String<double> &l_quer_for_k,String<String<double> > &allWk,unsigned allPWMsLength,int B){
+void compute_sdk_and_sk(String<double> &sk,
+						String<double> &l_quer_for_k,
+						String<String<double> > &allWk,
+						unsigned allPWMsLength,
+						int B){
 
 	String<double> sdk;//Standard-Abweichungen
 	resize(sdk,allPWMsLength);
@@ -1174,7 +1179,8 @@
 
 }
 
-void computeGapStat(String< std::map<unsigned int,std::map<Iupac,double> > > &allPWMs, String<Cluster> &observedCluster){
+void computeGapStat(String< std::map<unsigned int,std::map<Iupac,double> > > &allPWMs,
+					String<Cluster> &observedCluster){
 
 	String<Cluster> cluster;
 	String<String<double> > allWk;
@@ -1196,9 +1202,15 @@
 	/************
 		l_quer berechnen
 	************/
-	
-	compute_l_quer(Reference,cluster,l_quer_for_k,allWk,B,allPWMsLength,PWMLength);
-	
+	for(unsigned i=0;i<B;++i){
+
+		computeReferenceData( Reference,allPWMsLength, PWMLength );
+		
+		PWMClustering(Reference,cluster);
+		compute_l_quer(cluster,l_quer_for_k,allWk,i,B,allPWMsLength);
+		clear(Reference);
+		clear(cluster);
+	}
 	
 	/******************
 		Gap berechnen
@@ -1234,21 +1246,20 @@
 
 }
 
-void PWMClustering(String< std::map<unsigned int,std::map<Iupac,double> > > &allPWMs,String<Cluster> &cluster){
-	unsigned allPWMsLength=length(allPWMs);
+void PWMClustering(String< std::map<unsigned int,std::map<Iupac,double> > > &allPWMs,
+				   String<Cluster> &cluster){
 	
-	
-	resize(cluster,allPWMsLength);
-	
-
+	unsigned allPWMsLength=length(allPWMs);	
 	String<double> minDifference;
 	String<int> traceback;
+	std::vector<std::vector<String<double> > > compare(allPWMsLength, std::vector<String<double> >(allPWMsLength));
+	std::vector<int> clusterId(allPWMsLength);
+
+	resize(cluster,allPWMsLength);
 	resize(minDifference,3);
 	minDifference[0]=0;
 	 
-	std::vector<std::vector<String<double> > > compare(allPWMsLength, std::vector<String<double> >(allPWMsLength));
 	
-	std::vector<int> clusterId(allPWMsLength);
 	unsigned j;
 	for (j = 0; j < allPWMsLength; j++) clusterId[j] = j;//to assign which PWM is in which cluster
 	/***
@@ -1307,11 +1318,12 @@
 
 		appendValue(traceback,clusterId[int(minDifference[1])]);
 		appendValue(traceback,clusterId[int(minDifference[2])]);
-		//std::cout<<"clusterId: "<<clusterId[0]<<" "<<clusterId[1]<<" "<<clusterId[2]<<" "<<n<<" "<<allPWMsLength<<std::endl;
+		/****
+			Id's neu berechnen
+		****/
 		clusterId[int(minDifference[1])]=n-allPWMsLength-1;
 		for(j=0;j+minDifference[2]<allPWMsLength-1;++j)
 			clusterId[int(minDifference[2])+j]=clusterId[int(minDifference[2])+j+1];
-		//std::cout<<"clusterId: "<<clusterId[0]<<" "<<clusterId[1]<<" "<<clusterId[2]<<std::endl;
 		
 		minDifferenceInMatrix(n-1,minDifference,compare);
 	}
