diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.cpp ./sandbox/meyerclp/apps/dreme/dreme.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.cpp	2012-07-19 16:05:50.979797200 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.cpp	2012-07-19 16:23:46.590797200 +0200
@@ -93,48 +93,84 @@
 		InitGeneralization(IMaps,sequences,background);
 		std::cout<<"Generalize done"<<std::endl;
 		//PrintMap(sequences.generalizedSortedPValue);
-		sequences.seqCounter.clear();
-		background.seqCounter.clear();
+		//sequences.seqCounter.clear();
+		//background.seqCounter.clear();
 		sequences.SortedPValueReversed.clear();
 
 		/*****
 			- if there is not a single pValue<treshold exit the programm
 		*****/
-		if(sequences.generalizedSortedPValue.size()==0){
-			std::cout<<"Could not find a pValue<treshold";
-			std::exit(1);
-	
-		}
-		//PrintMap(sequences.generalizedSortedPValue);
-
-		std::map<String<Iupac>,unsigned int > seqCounter;
-		std::map<String<Iupac>,unsigned int > backCounter;
+		std::map<unsigned int,std::map<Iupac,double> > freqMatrix;
+		std::map<unsigned int,std::map<Iupac,double> > freqMatrixB;
 		Finder<Index<StringSet<String<Dna5> > > > finder(sequences.SArray);
 		Finder<Index<StringSet<String<Dna5> > > > finderB(background.SArray);//finder ins struct
+		if(sequences.generalizedSortedPValue.size()>0){
+			
 	
-		/*****
-			- gets the top 100(generalized) motifs and computes the exact counter and pValue
-		*****/
+		
+			//PrintMap(sequences.generalizedSortedPValue);
+
+			std::map<String<Iupac>,unsigned int > seqCounter;
+			std::map<String<Iupac>,unsigned int > backCounter;
+			
 	
-		exactGeneralizeCount(seqCounter,backCounter, finder, finderB,sequences,background, IMaps);
-		std::cout<<"exactGeneralize done"<<std::endl;
+			/*****
+				- gets the top 100(generalized) motifs and computes the exact counter and pValue
+			*****/
+	
+			exactGeneralizeCount(seqCounter,backCounter, finder, finderB,sequences,background, IMaps);
+			std::cout<<"exactGeneralize done"<<std::endl;
 
-		//PrintFastA(sequences);
+			//PrintFastA(sequences);
 
-		//PrintMap(sequences.generalizedSortedPValue);
+			//PrintMap(sequences.generalizedSortedPValue);
 
-		//std::cout<<sequences.generalizedSortedPValue.begin()->second;
-	
-		std::map<unsigned int,std::map<Iupac,double> > freqMatrix;
-		std::map<unsigned int,std::map<Iupac,double> > freqMatrixB;
-		double a=4;
-		output.open("output.fasta",std::ios::out|std::ios::app);
-		write(output,(*sequences.generalizedSortedPValue.begin()).second);
-		write(output,"   ");
-		
-		output<<(*sequences.generalizedSortedPValue.begin()).first;
-		write(output,"   ");
-		output.close();
+			//std::cout<<sequences.generalizedSortedPValue.begin()->second;
+			output.open("output.fasta",std::ios::out|std::ios::app);
+			write(output,(*sequences.generalizedSortedPValue.begin()).second);
+			write(output,"   ");
+		
+			output<<(*sequences.generalizedSortedPValue.begin()).first;
+			write(output,"   ");
+			output.close();
+			BuildFrequencyMatrix(freqMatrix, finder, (*sequences.generalizedSortedPValue.begin()).second,sequences,IMaps);
+			BuildFrequencyMatrix(freqMatrixB, finderB, (*sequences.generalizedSortedPValue.begin()).second,background,IMaps);
+			std::cout<<(*sequences.generalizedSortedPValue.begin()).second<<std::endl;
+			unsigned int KmerLength = length((*sequences.generalizedSortedPValue.begin()).second);
+			bool foreground = true;
+			PrintMap(freqMatrix,KmerLength,foreground);
+
+			foreground=false;
+			PrintMap(freqMatrixB,KmerLength,foreground);
+
+			freqMatrix.clear();
+			freqMatrixB.clear();
+		}
+		else{
+
+			output.open("output.fasta",std::ios::out|std::ios::app);
+			write(output,(*sequences.SortedPValue.begin()).second);
+			write(output,"   ");
+		
+			output<<(*sequences.SortedPValue.begin()).first;
+			write(output,"   ");
+			output.close();
+			BuildFrequencyMatrix(freqMatrix, finder, (*sequences.SortedPValue.begin()).second,sequences,IMaps);
+			BuildFrequencyMatrix(freqMatrixB, finderB, (*sequences.SortedPValue.begin()).second,background,IMaps);
+			std::cout<<(*sequences.SortedPValue.begin()).second<<std::endl;
+			unsigned int KmerLength = length((*sequences.SortedPValue.begin()).second);
+			bool foreground = true;
+			PrintMap(freqMatrix,KmerLength,foreground);
+
+			foreground=false;
+			PrintMap(freqMatrixB,KmerLength,foreground);
+
+			freqMatrix.clear();
+			freqMatrixB.clear();
+
+		}
+		
+		
 		//std::cout<<"first "<<(*sequences.generalizedSortedPValue.begin()).first<<std::endl;
 		/*****
 			- Computes the probability of each nucleotide to appear at each position (from the top motif)
@@ -142,22 +178,13 @@
 		*****/
 		//String<unsigned int> replaceString;
 		//String<unsigned int> replaceStringB;
-		BuildFrequencyMatrix(freqMatrix, finder, (*sequences.generalizedSortedPValue.begin()).second,sequences,IMaps);
-		BuildFrequencyMatrix(freqMatrixB, finderB, (*sequences.generalizedSortedPValue.begin()).second,background,IMaps);
-	
-		std::cout<<(*sequences.generalizedSortedPValue.begin()).second<<std::endl;
-		unsigned int KmerLength = length((*sequences.generalizedSortedPValue.begin()).second);
-		bool foreground = true;
-		PrintMap(freqMatrix,KmerLength,foreground);
-
-		foreground=false;
-		PrintMap(freqMatrixB,KmerLength,foreground);
+		
+		
 
 	
 
 
-		freqMatrix.clear();
-		freqMatrixB.clear();
+		
 
 		sequences.generalizedKmer.clear();
 		sequences.seqCounter.clear();
