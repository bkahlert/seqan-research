diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-09-27 00:26:22.352600000 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-09-27 00:35:03.710600000 +0200
@@ -2037,21 +2037,18 @@
 					 String<Iupac> temp,
 					 String<Iupac> temp2,
 					 unsigned int &counter){
-	//std::cout<<temp<<"  "<<temp2<<std::endl;
-	unsigned int RE1=seq.seqCounter.find(temp)->second;//das alte motiv aus dem letzten schritt
+	unsigned int RE1=seq.seqCounter.find(temp)->second;//old motif -->from the last step
 	
-	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){//falls temp2 ein altes motiv ist, hat es einen counter
+	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){//if temp2=known motif --> counter available
 		counter= RE1+ seq.seqCounter.find(temp2)->second - (RE1*seq.seqCounter.find(temp2)->second)/seq.SeqsNumber;
-			//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<SequenceCounter.find(temp2)->second.back()<<" "<<counter<<std::endl;
-		if(counter>seq.SeqsNumber){ std::cout<<"if "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<seq.seqCounter.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
-			system("PAUSE");
+		if(counter>seq.SeqsNumber){ std::cerr<<"Error, counter to big in if"<<std::endl;
+		std::exit(1);
 		}
 	}
 	else{
-		counter=RE1;//RE2=0, da noch nicht vorhanden
-		//std::cout<<"else "<<counter<<std::endl;
-		if(counter>seq.SeqsNumber){ std::cout<<"else "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
-			system("PAUSE");
+		counter=RE1;//RE2=0
+		if(counter>seq.SeqsNumber){ std::cerr<<"Error, counter to big in else"<<std::endl;
+		std::exit(1);
 		}
 	}
 	
@@ -2071,30 +2068,27 @@
 		std::exit(1);
 	}
 
-	//String<Iupac>="AAWR";
+	
 	
 	unsigned int RE1=(*generalizedKmer.find(temp)).second;//the new seed RE is a Kmer with wildcard
 	//temp2 may be in generalizedKmer or in SequenceCounter
 	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){// if temp2 is in SequenceCounter do the same as above --> has no wildcard
 		counter= RE1+ seq.seqCounter.find(temp2)->second- (RE1*seq.seqCounter.find(temp2)->second)/seq.SeqsNumber;
-		//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<SequenceCounter.find(temp2)->second.back()<<" "<<counter<<std::endl;
-		if(counter>seq.SeqsNumber){ std::cout<<"if "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<seq.seqCounter.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
-			system("PAUSE");
+		if(counter>seq.SeqsNumber){ std::cerr<<"Error, counter to big in if"<<std::endl;
+		std::exit(1);
 		}
 	}
 		
 	else if(generalizedKmer.find(temp2)!=generalizedKmer.end()){//if temp2 has a wildcard and is found in generalizedKmer
 		counter= RE1+ generalizedKmer.find(temp2)->second - (RE1*generalizedKmer.find(temp2)->second)/seq.SeqsNumber;
-		//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<generalizedKmer.find(temp2)->second<<" "<<counter<<std::endl;
-		if(counter>seq.SeqsNumber){ std::cout<<"elif "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<generalizedKmer.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
-			system("PAUSE");
-		}
+		if(counter>seq.SeqsNumber){ std::cerr<<"Error, counter to big in else if"<<std::endl;
+		std::exit(1);
 		
 	}
 	else{//if temp2 is not found
 		counter= RE1;//RE2=0
-		if(counter>seq.SeqsNumber){ std::cout<<"else "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
-				system("PAUSE");
+		if(counter>seq.SeqsNumber){ std::cerr<<"Error, counter to big in else"<<std::endl;
+		std::exit(1);
 		}
 	}
 }
