diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-07-15 14:15:33.153402900 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-07-15 14:39:00.634402900 +0200
@@ -462,7 +462,7 @@
 					std::cout<<" "<<temp<<" "<<Kmer<<" "<<*replaceIt<<std::endl;
 					temp = Kmer;// reset temp
 					resetTemp = IMaps.IupacMapInversed[replace]; //falls Y ersetzt wird, ist replace CT --> also resetTemp wieder Y
-					std::cout<<" resetTemp "<<resetTemp<<std::endl;
+					//std::cout<<" resetTemp "<<resetTemp<<std::endl;
 					*tempIt = *replaceIt;
 					//std::cout<<" re "<<temp<<" ";
 					tempIttemp=tempIt;//der rekursive aufruf mit diesem, da die schleife mit tempIt weitergehen soll
@@ -475,7 +475,17 @@
 					}
 					//zu häufig aufgerufen
 					if((*tempIttemp == 'A' || *tempIttemp == 'C' || *tempIttemp == 'G' || *tempIttemp == 'T' || tempIttemp == end(temp))){//falls nicht, dann kann dies übersprungen werden
-						std::cout<<"pos "<<pos<< " "<<posTemp<<std::endl;
+						/**
+						posTemp gibt die Stelle an, an der man sich grad befindet 
+						--> freqMatrix enthält für jede Position die W'keit für ACGT
+						--> counter ist die Anzahl wie oft das Wildcard Motiv insgesamt gefunden wurde
+						--> CounterV an letzter Stelle die Anzahl für das jeweilige nicht-Wildcard Motiv
+						--> bei GSAKYA z.B. als Motiv wird jedes Motiv bei 'S' vier mal gesucht(durch die anderen 2 Wildcards)
+						--> CounterV für 1 bis posTemp aufaddieren --> in freqMatrix und zwar für die jeweiligen *tempIt-chars
+						--> am Ende alle durch counter teilen --> aufpassen, für jeweilige pos gibts verschiedene counter
+
+						**/
+						std::cout<<"tempo "<<temp;
 						FindTopKmer(seq,temp,finder,counter,CounterV,replaceString);
 						
 					}
