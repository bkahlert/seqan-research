diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x core -x extras -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/demos/ChIPSeq.cpp ./sandbox/meyerclp/demos/ChIPSeq.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/demos/ChIPSeq.cpp	2012-04-17 16:34:24.560405700 +0200
+++ ./sandbox/meyerclp/demos/ChIPSeq.cpp	2012-04-17 16:48:57.646405700 +0200
@@ -17,10 +17,10 @@
 				 <<"Usage:" <<argv[0]<<"File"<<std::endl;
 		return 1;
 	}
-	std:: ifstream fasta(argv[1], std:: ios_base::in | std::ios_base::binary);
+	std::fstream fasta(argv[1], std:: ios_base::in | std::ios_base::binary);
 	if(!fasta.good())
 		return 1;
-	RecordReader<std::ifstream, SinglePass<> > reader(fasta);
+	//RecordReader<std::fstream, SinglePass<> > reader(fasta);
 
 	AutoSeqStreamFormat formatTag;
 	if(!checkStreamFormat(reader,formatTag)){
@@ -31,27 +31,43 @@
 
 
 	//Variable um Sequenz und ID zu speichern
-	CharString id;
-	Dna5String seq;
 
-	while(!atEnd(reader)){
+	typedef String<char,MMap<> > TMMapString;
+	TMMapString mmapString;
+	if(!open(mmapString, argv[1], OPEN_RDONLY))
+		return 1;
+	RecordReader<TMMapString, DoublePass<Mapped> > reader2(mmapString);
+
+	StringSet<CharString> ids;
+	StringSet<Dna5String> seqs;
 
-		if(readRecord(id,seq,reader,formatTag) !=0){
-			std::cerr<<"ERROR reading FASTA"<<std::endl;
-			return 1;
-		}
-		std::cout<<id<<"\t"<<seq<<"\n";
+	if(readRecord(ids,seqs,reader,formatTag) !=0){
+				std::cerr<<"ERROR reading FASTA"<<std::endl;
+				return 1;
 	}
+			
+	typedef Iterator<StringSet<CharString>, Rooted>::Type TIdIter;
+	typedef Iterator<StringSet<String<Dna5Q> >, Standard>::Type TSeqIter;
+	TIdIter idIt =begin(ids, Rooted());
+	TSeqIter seqIt=begin(seqs, Standard());
+	CharString quals;
+	for(;!atEnd(idIt);++idIt,++seqIt){
+
+		resize(quals, length(*seqIt));
+		assignQualities(quals,*seqIt);
+		std::cout<<*idIt<<'\t'<<*seIt<<'\t'<<quals<<std::endl;
 
-	Index<Dna5String> index(seq);
-	Dna5String needle = "A";
-	Finder<Index<Dna5String> > finder(index);
-
-	Pattern<Dna5String> pattern(needle);
-	while(find(finder, pattern)){
-		std::cout<<'[' <<beginPosition(finder)<<','<<endPosition(finder)<<")\t"<<infix(finder)<<std::endl;
 	}
 
+	//Index<Dna5String> index(seq);
+	//Dna5String needle = "A";
+	//Finder<Index<Dna5String> > finder(index);
+
+	//Pattern<Dna5String> pattern(needle);
+	//while(find(finder, pattern)){
+	//	std::cout<<'[' <<beginPosition(finder)<<','<<endPosition(finder)<<")\t"<<infix(finder)<<std::endl;
+	//}
+
 	return 0;
 
 }
\ No newline at end of file
