diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-07-18 13:31:55.068609500 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-07-18 14:46:36.943609500 +0200
@@ -834,7 +834,8 @@
 	
 	
 
-	//std::cout<<"begin"<<std::endl;
+	std::cout<<"begin Fisher "<<seq.generalizedKmer.size()<<" "<<back.generalizedKmer.size()<<std::endl;
+	std::cout<<seq.SeqsNumber<<std::endl;
 	if(seq.generalizedKmer.size()==0)	
 		return 2;
 
@@ -847,7 +848,7 @@
 	//std::cout<<generalizedKmerSequence.size();
 	for(;MapI!=seq.generalizedKmer.end();++MapI,++MapIB){
 		
-
+		if((*MapI).second >= seq.SeqsNumber || (*MapIB).second >= back.SeqsNumber) std::cout<<(*MapI).first<<" "<<(*MapI).second<<" "<<(*MapIB).first<<" "<<(*MapIB).second<<std::endl;
 		modifyFET((*MapI).second,(*MapIB).second,seq.SeqsNumber - (*MapI).second,back.SeqsNumber - (*MapIB).second,pValue);
 		
 
@@ -988,6 +989,7 @@
 	unsigned int i=0;
 	unsigned int limit;
 	if(seq.SortedPValue.size()>seq.seed)	limit=seq.seed;//seed meist = 100
+	else if(seq.SortedPValue.size()==0) return;
 	else	limit = seq.SortedPValue.size();
 	for(MapIterator=seq.SortedPValue.begin();i<limit;++MapIterator,++i){//iterate over Top100
 		GeneralizeKmer((*MapIterator).second,IMaps,seq,back);
@@ -1003,7 +1005,7 @@
 
 	do{//only start a new round, if the top PValue is an improvement of the old one
 		
-		std::cout<<"test";
+		
 		/*
 			while wird das erste mal mit generalizedKmer aufgerufen und dem tempor채ren mapping der pValues
 			das tempor채re mapping wird in das richtige mapping gemerged und gecleant, damit geschaut werden kann, ob bei den neuen pValues ein wert
@@ -1033,17 +1035,17 @@
 		for(MapIteratorT=generalizedSortedPValueTemp.begin();i<limit;++MapIteratorT,++i){//iterate over Top100
 		
 			//Temp ums zu finden, aber das normale auch 체bergeben, zum neu bef체llen
-			std::cout<<"for";
+			
 			GeneralizeKmer((*MapIteratorT).second,generalizedKmerTemp,generalizedKmerBackgroundTemp,IMaps,seq,back);
 			
 			                                                                        
 	
 		}
 		generalizedSortedPValueTemp.clear();
-
+		std::cout<<"nach for"<<std::endl;
 	topPValueOld =topPValue;
 	topPValue = FisherExactTest(seq,back,generalizedSortedPValueTemp);
-	
+	std::cout<<"nach Fisher "<<topPValue<<" "<<topPValueOld<<std::endl;
 		
 	}while(topPValue<0.05 && topPValue<topPValueOld);
 	
