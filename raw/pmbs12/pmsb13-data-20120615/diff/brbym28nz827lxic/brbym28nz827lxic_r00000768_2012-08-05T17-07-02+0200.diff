diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-08-05 13:54:17.136803900 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-08-05 17:06:56.392803900 +0200
@@ -153,7 +153,7 @@
 void saveData(Seq &seq,std::ofstream &PWM,unsigned c);
 void computesDistantMatrix(Seq &seq,std::vector<std::vector<String<double > > > &compare, unsigned allPWMsLength);
 String<double> AlignPWMs(std::map<unsigned int,std::map<Iupac,double> > &freqMatrix1,std::map<unsigned int,std::map<Iupac,double> > &freqMatrix2);
-
+double computeDr(Cluster &cluster,std::vector<std::vector<String<double> > > copyCompare);
 
 
 
@@ -959,14 +959,30 @@
 
 }
 
-//double computeDr(Cluster &cluster){
-//
-//	double Dr;
-//
-//
-//
-//	return Dr;
-//}
+double computeDr(Cluster &cluster,std::vector<std::vector<String<double> > > copyCompare){
+
+	double Dr=0;
+
+	for(unsigned i=0;i<length(cluster.content);++i){
+
+		for(unsigned j=0;j<length(cluster.content);++i){
+
+			if(i<j){
+
+				Dr+= copyCompare[cluster.content[j]][cluster.content[i]][0];//copyCompare[i][j] --> i>j, daher falls i<j umdrehen
+				
+			}
+			else if(j<i){
+				Dr+= copyCompare[cluster.content[i]][cluster.content[j]][0];
+			}
+		}
+	}
+	
+
+
+
+	return Dr;
+}
 
 
 
@@ -1019,15 +1035,7 @@
 		//einmalige kopie von compare anlegen --> alle paarweisen abstände enthalten -->ist schon halbiert--> formel abändern
 		//nicht left right, sondern liste mit den clustern --> liste in funktion auslesen
 		UpdateDistantMatrix(n,int(minDifference[1]),int(minDifference[2]),compare,weights,AverageLinkage());
-		/*std::vector<int> a;
-		int bn = allPWMsLength-n;
-		system("PAUSE");
-		a.push_back(bn);
-		system("PAUSE");
-		a.push_back( allPWMsLength-n);
-		system("PAUSE");
-		a.push_back(clusterId[int(minDifference[1])]);
-		system("PAUSE");*/
+	
 		/***
 				cluster[0] = 1  2 --> clusterId=-1
 				cluster[1] = -1 3 --> clusterId=-2  --> traceback: -(-1)-1: 0 -->cluster[0]
@@ -1039,40 +1047,41 @@
 				-> für computeDr
 		****/
 		if(clusterId[int(minDifference[1])]<0){
-			std::cout<<"1 ";
+			
 			cluster[allPWMsLength-n].content=cluster[-clusterId[int(minDifference[1])] - 1].content;
 		}
 		else{
 			
 			
-			
-			
 			appendValue(temp,clusterId[int(minDifference[1])],Exact());
 			
-			
-			
 		}
 	
 		if(clusterId[int(minDifference[2])]<0){
-			std::cout<<"2 "<<clusterId[int(minDifference[2])];
+			
 			append(temp,cluster[-clusterId[int(minDifference[2])] - 1].content,Exact()); 
 		}
 		else{
 			
 			appendValue(temp,clusterId[int(minDifference[2])],Exact());
-			std::cout<<"2else ";
+			
 		}
-		system("PAUSE");
+		
 		cluster[allPWMsLength-n].content=temp;
 		
 		clear(temp);
-		system("PAUSE");
-		//cluster[allPWMsLength-n].Dr=computeDr(cluster[allPWMsLength-n]);
-		std::cout<<"Cluster: ";
+		/****
+					Dr berechnet
+		****/
+		cluster[allPWMsLength-n].Dr=computeDr(cluster[allPWMsLength-n],copyCompare);
+
+
+
+		/*std::cout<<"Cluster: ";
 		for(unsigned o=0;o<length(cluster[allPWMsLength-n].content);++o){
 			std::cout<<cluster[allPWMsLength-n].content[o]<<" ";
 		}
-		std::cout<<std::endl;
+		std::cout<<std::endl;*/
 
 		cluster[allPWMsLength-n].left=clusterId[int(minDifference[1])];
 		cluster[allPWMsLength-n].right=clusterId[int(minDifference[2])];
