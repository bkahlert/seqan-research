diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-08-21 14:09:26.872707000 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-08-21 14:15:15.883707000 +0200
@@ -1258,11 +1258,13 @@
 	unsigned j=0;
 	for(unsigned k=1;k<allPWMsLength-1;++k){
 		j=allPWMsLength-(k+1);
-		std::cout<<"gap "<<Gap[j]<<" "<<Gap[j+1]<<" "<<sk[j+1]<<std::endl;
+		//std::cout<<"gap "<<Gap[j]<<" "<<Gap[j+1]<<" "<<sk[j+1]<<std::endl;
 		if(Gap[j]<=Gap[j+1]-sk[j+1]){
 			std::cout<<"j "<<j<<std::endl;
 			std::cout<<j+1<<" Cluster sind das Optimum, also nach dem "<<allPWMsLength - (j + 1)<<" Cluster-Schritt"<<std::endl;
-			break;
+			clear(allWk);
+			clear(Gap);
+			return (allPWMsLength - (j + 1));
 		}
 
 	}
@@ -1273,13 +1275,17 @@
 	clear(Gap);
 	
 
-	return (allPWMsLength - (j + 1));
+	return 0;
 
 }
 
 void clusterTraceback(String<int> &traceback, unsigned j){
 
 	Iterator<String<int> >::Type tracebackIt;
+	if(j==0){	
+		std::cout<<"Kein Clustern sinnvoll"<<std::endl;
+		return;
+	}
 	std::cout<<"Traceback: "<<std::endl;
 	unsigned o=0;
 	for(tracebackIt=begin(traceback);tracebackIt!=end(traceback) && o<j;++tracebackIt, ++o){
