diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/demos/Indices.cpp ./sandbox/meyerclp/demos/Indices.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/demos/Indices.cpp	2012-04-12 17:16:15.450384400 +0200
+++ ./sandbox/meyerclp/demos/Indices.cpp	2012-04-12 17:37:33.820384400 +0200
@@ -4,6 +4,55 @@
 
 using namespace seqan;
 
+
+
+template <typename TStringSet, typename TIndexSpec>
+void qgramCounting(TStringSet &set, TIndexSpec)
+{
+    typedef Index<TStringSet, TIndexSpec> TIndex;
+    typedef typename Fibre<TIndex, QGramCounts>::Type TCounts;
+    typedef typename Fibre<TIndex, QGramCountsDir>::Type TCountsDir;
+    typedef typename Value<TCountsDir>::Type TDirValue;
+    typedef typename Iterator<TCounts, Standard>::Type TIterCounts;
+    typedef typename Iterator<TCountsDir, Standard>::Type TIterCountsDir;
+    TIndex index(set);
+    indexRequire(index, QGramCounts());
+    // initialize distance matrix
+    int seqNum = countSequences(index);
+    Matrix<int, 2> distMat;
+    setLength(distMat, 0, seqNum);
+    setLength(distMat, 1, seqNum);
+    resize(distMat, 0);
+    std::cout << std::endl << "Length of the CountsDir fibre: " << length(indexCountsDir(index)) << std::endl;
+    TIterCountsDir itCountsDir = begin(indexCountsDir(index), Standard());
+    TIterCountsDir itCountsDirEnd = end(indexCountsDir(index), Standard());
+    TIterCounts itCountsBegin = begin(indexCounts(index), Standard());
+
+	 // for each bucket count common q-grams for each sequence pair
+    TDirValue bucketBegin = *itCountsDir;
+    for(++itCountsDir; itCountsDir != itCountsDirEnd; ++itCountsDir)
+    {
+        TDirValue bucketEnd = *itCountsDir;
+        // q-gram must occur in at least 2 different sequences
+        if (bucketBegin != bucketEnd)
+        {
+            TIterCounts itA = itCountsBegin + bucketBegin;
+            TIterCounts itEnd = itCountsBegin + bucketEnd;
+            for(; itA != itEnd; ++itA)
+                for(TIterCounts itB = itA; itB != itEnd; ++itB)
+                    distMat((*itA).i1, (*itB).i1) += _min((*itA).i2, (*itB).i2);
+        }
+        bucketBegin = bucketEnd;
+    }
+    std::cout << std::endl << "Common 5-mers for Seq_i, Seq_j" << std::endl;
+    std::cout << distMat;
+}
+
+
+
+
+
+
 int main (){
 
 	//String<char> myString = "abracadabra";
@@ -92,36 +141,25 @@
 	//	std::cout<<getOccurrences(index, indexShape(index))[i]<<std::endl;
 	
 	
+	//  for the sake of reproducibility
+    Rng<MersenneTwister> rng;
+    // create StringSet of 3 random sequences
+    StringSet<DnaString> stringSet;
+    reserve(stringSet, 3);
+    for (int seqNo = 0; seqNo < 3; ++seqNo)
+    {
+        DnaString tmp;
+        int len = pickRandomNumber(rng) % 100 + 10;
+        for (int i = 0; i < len; ++i)
+            appendValue(tmp, Dna(pickRandomNumber(rng) % 4));
+        appendValue(stringSet, tmp);
+        std::cout << ">Seq" << seqNo << std::endl << tmp << std::endl;
+    }
+    qgramCounting(stringSet, IndexQGram<UngappedShape<5> >());
+    qgramCounting(stringSet, IndexQGram<UngappedShape<5>, OpenAddressing>());
 	
-	
-	
-	typedef String<Dna> TDnaSeq;
-	typedef Align<TDnaSeq, ArrayGaps> TAlign;
-	TDnaSeq seq1 = "acgtacgtact";
-	TDnaSeq seq2 = "actactacgt";
-	TDnaSeq seq3 = "actggggcgt";
-	TAlign align;
-	resize(rows(align),3);
-	assignSource(row(align,0),seq1);
-	assignSource(row(align,1),seq2);
-	assignSource(row(align,2),seq3);
-
-	typedef Index<DnaString, IndexQGram< UngappedShape<5> > > TIndex;
-
-	//TIndex index(align);
-
-	typedef Row<TAlign>::Type TRow;
-	TRow &row1 = row(align,0);
-	Iterator<TRow>::Type AlignIter = begin(row1);
-	for(int i=0;i<length(row1)-4;++i){
-		++AlignIter;
-		for(int j=0;j<4;++j){
-			
-			std::cout<< *AlignIter;
-			++AlignIter;
-		}
-		
-	}
+
+
 
 	return 0; 
 
