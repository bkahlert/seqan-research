diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata/brbym28nz827lxic_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x C:/Users/David/Desktop/Seqan/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h ./sandbox/meyerclp/apps/dreme/dreme.h
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/meyerclp/apps/dreme/dreme.h	2012-07-18 16:10:59.074609500 +0200
+++ ./sandbox/meyerclp/apps/dreme/dreme.h	2012-07-18 17:00:46.755609500 +0200
@@ -1082,15 +1082,15 @@
 			//std::cout<<temp<<" ";
 			tempChar =*tempIt;//stores the current char because of temp2
 			*tempIt=*replaceIt;
-			temp2=temp;
-			*tempIt=tempChar;
+			temp2=temp;//temp2 ist nun das mit dem char für die neue wildcard
+			*tempIt=tempChar;//temp wieder das alte, wird aber im nächsten schritt mit einer neuen wildcard ergänzt
 			*tempIt =IMaps.IupacMap[IMaps.IupacMapReversed[*tempIt] + IMaps.IupacMapReversed[*replaceIt]];//compute Iupac-letter--> A + G = R and replace the current location in temp
 			//std::cout<<Kmer<<" "<<temp<<" "<<temp2<<std::endl;
 			if(seq.generalizedKmer.find(temp)!=seq.generalizedKmer.end()) continue;// if Kmer is in the Map -->nothing to do
-			//estimateCounter mit Kmer und temp2 aufrufen
+			//estimateCounter mit Kmer und temp2 aufrufen --> Kmer=AAA  temp2=TAA temp=WAA
 			estimateCounter(seq,Kmer,temp2,counter);
 			//std::cout<<temp<<" ";
-			seq.generalizedKmer[temp]=counter;
+			seq.generalizedKmer[temp]=counter;//temp ist das neue motiv
 			estimateCounter(back,Kmer,temp2,counter);
 			back.generalizedKmer[temp]=counter;
 		}
@@ -1124,10 +1124,10 @@
 		//if(*tempIt == 'A' || *tempIt == 'C' ||*tempIt == 'G' ||*tempIt == 'T') continue;//only replace the position with a wildcard
 		
 		
-		
+		if(*tempIt =='N')continue;//gibt nichts mehr zu ersetzen
 		replace=IMaps.IupacMapReplace[*tempIt];
 		replaceIt = begin(replace);	
-		for(;replaceIt!=end(replace);++replaceIt){// loop over the replacement-chars
+		for(;replaceIt!=end(replace);++replaceIt){// loop over the replacement-chars, W=AT --> replace=CG
 			temp = Kmer;// reset temp
 			//std::cout<<*replaceIt<<std::endl;
 			tempChar =*tempIt;//stores the current char because of temp2
@@ -1139,7 +1139,7 @@
 			
 			if(seq.SortedPValueReversed[Kmer] >= 0.05 || seq.SortedPValueReversed[temp2] >= 0.05) continue;//only if Kmer and temp2 are significant estimate the counter
 			if(generalizedKmerTemp.find(temp)!=generalizedKmerTemp.end()) continue;
-			std::cout<<Kmer<<" "<<temp<<" "<<temp2<<std::endl;
+			//std::cout<<Kmer<<" "<<temp<<" "<<temp2<<std::endl;
 			estimateCounter(seq,generalizedKmerTemp,Kmer,temp2,counter);
 			if(counter>= seq.SeqsNumber) std::cout<<temp<<" "<<counter<<std::endl;
 			seq.generalizedKmer[temp]=counter;
@@ -1207,18 +1207,23 @@
 	- SequencesCounter and BackgroundCounter
 */
 void estimateCounter(Seq &seq,
-					 String<Iupac> temp,String<Iupac> temp2,
+					 String<Iupac> temp,
+					 String<Iupac> temp2,
 					 unsigned int &counter){
 	//std::cout<<temp<<"  "<<temp2<<std::endl;
-	unsigned int RE1=seq.seqCounter.find(temp)->second;
-	unsigned int RE2=0;//counter for the second regular expression(Kmer)-->may be new
-	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){
+	unsigned int RE1=seq.seqCounter.find(temp)->second;//das alte motiv aus dem letzten schritt
+	
+	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){//falls temp2 ein altes motiv ist, hat es einen counter
 		counter= RE1+ seq.seqCounter.find(temp2)->second - (RE1*seq.seqCounter.find(temp2)->second)/seq.SeqsNumber;
 			//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<SequenceCounter.find(temp2)->second.back()<<" "<<counter<<std::endl;
+		if(counter>seq.SeqsNumber) std::cout<<"if "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<seq.seqCounter.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
+		
 	}
 	else{
-		counter=RE1 + RE2;
+		counter=RE1;//RE2=0, da noch nicht vorhanden
 		//std::cout<<"else "<<counter<<std::endl;
+		if(counter>seq.SeqsNumber) std::cout<<"else "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
+	
 	}
 	
 }
@@ -1240,19 +1245,22 @@
 	//String<Iupac>="AAWR";
 	
 	unsigned int RE1=(*generalizedKmer.find(temp)).second;//the new seed RE is a Kmer with wildcard
-	unsigned int RE2=0;//temp2 may be in generalizedKmer or in SequenceCounter
+	//temp2 may be in generalizedKmer or in SequenceCounter
 	if(seq.seqCounter.find(temp2)!=seq.seqCounter.end()){// if temp2 is in SequenceCounter do the same as above --> has no wildcard
 		counter= RE1+ seq.seqCounter.find(temp2)->second- (RE1*seq.seqCounter.find(temp2)->second)/seq.SeqsNumber;
 		//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<SequenceCounter.find(temp2)->second.back()<<" "<<counter<<std::endl;
+		if(counter>seq.SeqsNumber) std::cout<<"if "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<seq.seqCounter.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
 		
 	}
 		
 	else if(generalizedKmer.find(temp2)!=generalizedKmer.end()){//if temp2 has a wildcard and is found in generalizedKmer
 		counter= RE1+ generalizedKmer.find(temp2)->second - (RE1*generalizedKmer.find(temp2)->second)/seq.SeqsNumber;
 		//std::cout<<temp<<" "<<temp2<<" "<<RE1<<"  "<<generalizedKmer.find(temp2)->second<<" "<<counter<<std::endl;
+		if(counter>seq.SeqsNumber) std::cout<<"elif "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" "<<generalizedKmer.find(temp2)->second<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
 	}
 	else{//if temp2 is not found
-		counter= RE1 + RE2;
+		counter= RE1;//RE2=0
+		if(counter>seq.SeqsNumber) std::cout<<"else "<<counter<<" "<<temp<<" "<<RE1<<" "<<temp2<<" SeqsNumer "<<seq.SeqsNumber<<std::endl;
 	}
 }
 
