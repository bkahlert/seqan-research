diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/gxymtwhk6d1fehg3_stats.txt -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata/gxymtwhk6d1fehg3_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x Z:/RAID/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x Z:/RAID/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x Z:/RAID/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/wissmann/demos/task1.cpp ./sandbox/wissmann/demos/task1.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/wissmann/demos/task1.cpp	2012-05-11 15:08:34.899146000 +0200
+++ ./sandbox/wissmann/demos/task1.cpp	2012-05-11 15:10:41.268335000 +0200
@@ -26,8 +26,8 @@
 String<char> revert (String<char> word){
 	String<char> rWord;
 	resize(rWord, length(word));
-	int n = length(word);
-	for (int i = 0; i< n ; i++){
+	unsigned n = length(word);
+	for (unsigned i = 0; i< n ; i++){
 		rWord[i] = word[n-i-1];
 	}
 	return rWord;
@@ -56,7 +56,7 @@
 
 // finds all patterns with one missmatch within the second half of the pattern (but none without missmatch)
 void forwardSearch (BowTieFinder finder) {
-	for (int i = 0; i < (patternLength- cutPos); i++){
+	for (unsigned i = 0; i < (patternLength- cutPos); i++){
 
 		cuttedPattern= pattern;
 		resize (cuttedPattern, cutPos + i);
@@ -84,7 +84,7 @@
 
 // finds all patterns with one missmatch within the first half of the pattern (but none without missmatch)
 void backwardSearch (BowTieFinder finder){
-	for (int i = 0; i < cutPos; i++){
+	for (unsigned i = 0; i < cutPos; i++){
 
 		cuttedPattern = rPattern;
 		resize (cuttedPattern, patternLength- cutPos + i);
@@ -112,7 +112,7 @@
 }
 
 // char c ist the character that is the substitute at the ith position of the right half of the pattern
-void backtrack (BowTieIterator iter, String<char> mypattern, int i, char c){
+void backtrack (BowTieIterator iter, String<char> mypattern, unsigned i, char c){
 	if (goDown(iter, c)){
 		std::cout << representative(iter) << std::endl;
 		// from here: going down the chars exactly from pattern to verify
@@ -120,11 +120,11 @@
 		resize(rightHalf, patternLength - cutPos - i - 1 );
 		rightHalf = revert(rightHalf);
 		if (goDown(iter,rightHalf)){		
-				for (int k = 0; k < length(getOccurrences(iter));k++){
+				for (unsigned k = 0; k < length(getOccurrences(iter));k++){
 					std::cout << pattern << ", found at: " << getOccurrences(iter)[k] << std::endl;
 				}
 				//resetting position of iterator before reading the right half of the pattern
-				for (k = 0; k < length(rightHalf); k++)
+				for (unsigned k = 0; k < length(rightHalf); k++)
 					goUp(iter);
 		}
 		//resetting the position of iterator before reading char c
@@ -170,7 +170,7 @@
 
 	
 	goDown(forwardIter, cuttedPattern);
-	for (int i = 0; i < (patternLength- cutPos); i++){
+	for (unsigned i = 0; i < (patternLength- cutPos); i++){
 		std::cout << cutPos+i << " = " << readPos(pattern, cutPos+i)<< std::endl;
 		if (readPos(pattern,cutPos+i)!= 'A') {
 			std::cout << cutPos+i << " : not 'A'" <<std::endl;
@@ -196,7 +196,7 @@
 	}
 
 	//goDown(forwardIter, "ag");
-	//for (int i = 0; i < length(getOccurrences(forwardIter));i++){
+	//for (unsigned i = 0; i < length(getOccurrences(forwardIter));i++){
 	//	std::cout << getOccurrences(forwardIter)[i] << std::endl;
 	//}
 
