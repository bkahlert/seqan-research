diff -u -r -N -x '*.o' -x Thumbs.db -x .DS_Store -x CMakeCache.txt -x misc/seqan_instrumentation/userdata/id.txt -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata/id.txt -x misc/seqan_instrumentation/userdata/gxymtwhk6d1fehg3_stats.txt -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata/gxymtwhk6d1fehg3_stats.txt -x .svn -x bin -x build -x util -x misc -x docs -x docs2 -x extras -x core -x misc/seqan_instrumentation/bin -x Z:/RAID/Seqan/misc/seqan_instrumentation/bin -x misc/seqan_instrumentation/last_revision_copy -x Z:/RAID/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/last_revision_copy -x Z:/RAID/Seqan/misc/seqan_instrumentation/last_revision_copy -x misc/seqan_instrumentation/userdata -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata -x misc/seqan_instrumentation/userdata -x Z:/RAID/Seqan/misc/seqan_instrumentation/userdata ./misc/seqan_instrumentation/last_revision_copy/sandbox/wissmann/demos/task1.cpp ./sandbox/wissmann/demos/task1.cpp
--- ./misc/seqan_instrumentation/last_revision_copy/sandbox/wissmann/demos/task1.cpp	2012-05-09 14:46:44.275516000 +0200
+++ ./sandbox/wissmann/demos/task1.cpp	2012-05-09 14:53:53.881154000 +0200
@@ -45,14 +45,14 @@
 }
 
 // finds all patterns with no missmatches
-void exactSearch (BowTieFinder finder,String<char> pattern){
+void exactSearch (BowTieFinder finder){
 	while (find(finder, pattern)) {
 	std::cout << pattern << ", found: " << pattern << " at position "<< position(finder) << std::endl;
 	}
 }
 
-// finds all patterns with one missmatch within the second half of the pattern
-void forwardSearch (BowTieFinder finder, String<char> pattern) {
+// finds all patterns with one missmatch within the second half of the pattern (but none without missmatch)
+void forwardSearch (BowTieFinder finder) {
 	for (int i = 0; i < (patternLength- cutPos); i++){
 
 		cuttedPattern= pattern;
@@ -79,6 +79,31 @@
 	}
 }
 
+// finds all patterns with one missmatch within the first half of the pattern (but none without missmatch)
+void backwardSearch (BowTieFinder finder){
+	for (int i = 0; i < cutPos; i++){
+
+		cuttedPattern = rPattern;
+		resize (cuttedPattern, patternLength- cutPos + i);
+		//std::cout << cuttedPattern;
+
+		rightHalf = pattern;
+		resize(rightHalf, cutPos -i - 1);
+		rightHalf = revert(rightHalf);
+		//std::cout << " " << rightHalf << std::endl;
+
+		clear(finder);
+
+		while (find(finder, cuttedPattern)) {
+			if ((position(finder)+ patternLength <= textLength)&&((rText[position(finder) + length(cuttedPattern)]) != rPattern[i + patternLength - cutPos]) && ((length(cuttedPattern)) == (patternLength-1))){
+				std::cout << pattern << ", found: " << revert(rightHalf) << rText [position(finder)+ length(cuttedPattern)] << revert(cuttedPattern) << " at position " << textLength - patternLength - position(finder) << std::endl;
+			}else if ((position(finder)+ patternLength <= textLength)&&((rText[position(finder) + length(cuttedPattern)]) != rPattern[i + patternLength - cutPos]) && (verify(rText, rightHalf, position(finder) + length(cuttedPattern)+ 1 ))){
+				std::cout << pattern << ", found: " << revert(rightHalf) << rText [position(finder)+ length(cuttedPattern)] << revert(cuttedPattern) << " at position " << textLength - patternLength - position(finder) << std::endl;
+			}
+		}
+	}
+}
+
 
 int main(){
 	
@@ -91,7 +116,6 @@
 	rPattern = revert(pattern);
 
 	//Forward- and Backward-Index
-
 	BowTieIndex forwardIndex(text);
 	BowTieFinder forwardFinder(forwardIndex);
 
@@ -99,34 +123,9 @@
 	BowTieFinder backwardFinder(backwardIndex);
 
 	//textverification search
-	exactSearch(forwardFinder, pattern);
-	forwardSearch(forwardFinder, pattern);
-
-	//ForwardIndex-Suche
-	//for (int i = 0; i < (patternLength- cutPos); i++){
-
-	//	cuttedPattern= pattern;
-	//	resize (cuttedPattern, cutPos + i);
-	//	//std::cout << cuttedPattern;
-
-	//	rightHalf = rPattern;
-	//	resize(rightHalf, patternLength - cutPos - i - 1 );
-	//	rightHalf = revert(rightHalf);
-	//	//std::cout << " " << rightHalf << std::endl;
-
-	//	clear(forwardFinder);
-
-	//	while (find(forwardFinder, cuttedPattern)) {
-
-	//		//std::cout << rightHalf << std::endl;
-	//		//std::cout << position(forwardFinder)<< std::endl;
-	//		if ((position(forwardFinder)+ patternLength <= textLength)&&(text[position(forwardFinder) + length(cuttedPattern)]!= pattern[i+ cutPos]) && ((length(cuttedPattern)) == (patternLength-1))){
-	//			std::cout << pattern << ", found: " << cuttedPattern << text[position(forwardFinder)+ length(cuttedPattern)] << rightHalf << " at position "<< position(forwardFinder) << std::endl;
-	//		}else if ((position(forwardFinder)+ patternLength <= textLength)&&(text[position(forwardFinder) + length(cuttedPattern)] != pattern[i+ cutPos]) && (verify ( text , rightHalf , position(forwardFinder) + length(cuttedPattern)+ 1 ))){ 
-	//			std::cout << pattern << ", found: " << cuttedPattern << text[position(forwardFinder)+ length(cuttedPattern)] << rightHalf << " at position "<< position(forwardFinder) << std::endl;
-	//		}
-	//	}
-	//}
+	exactSearch(forwardFinder);
+	forwardSearch(forwardFinder);
+	backwardSearch(backwardFinder);
 
 	//BackwardIndex-Suche
 	for (int i = 0; i < cutPos; i++){
