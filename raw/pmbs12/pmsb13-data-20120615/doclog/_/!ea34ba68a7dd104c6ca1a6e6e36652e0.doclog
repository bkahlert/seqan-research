2012-04-13T09:09:04.322+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:10.178+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:11.519+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:13.022+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:15.970+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:25.293+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:05.459+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1466	1423	771
2012-04-13T09:11:08.720+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T09:11:15.646+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:45.146+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:52.120+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T09:11:56.736+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3241	1423	771
2012-04-13T09:12:06.471+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:22.944+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:33.959+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:40.951+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:42.856+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:47.288+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:49.277+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:49.466+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:54.535+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:30.623+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:35.065+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.693+02:00	LINK-http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.743+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.976+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:40.068+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:40.282+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#addEdges	87.77.83.75	-	0	0	163	771
2012-04-13T09:26:41.972+02:00	UNLOAD	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#addEdges	87.77.83.75	-	0	0	163	771
2012-04-13T09:26:42.135+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:42.237+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:43.778+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:43.951+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:44.343+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:44.382+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	0	1423	771
2012-04-13T09:27:04.759+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	228	1423	771
2012-04-13T09:27:48.008+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	456	1423	771
2012-04-13T09:27:50.423+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	529	1423	771
2012-04-13T09:27:52.810+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	187	1423	771
2012-04-13T09:27:53.008+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	187	1423	771
2012-04-13T09:27:53.196+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:27:53.250+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:27:57.033+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1596	1423	771
2012-04-13T09:28:01.159+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:28:06.966+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	570	1423	771
2012-04-13T09:28:15.012+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T09:28:19.684+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T10:10:30.773+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T10:10:36.457+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:36.659+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:36.836+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:37.251+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:37.290+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:48.960+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:49.111+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:49.157+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:51.125+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:53.570+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:29.783+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:31.790+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:31.966+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:32.361+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:32.399+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.453+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.540+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.639+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#assignVertexMap	87.77.83.75	-	0	0	163	771
2012-04-13T10:11:35.689+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:39.408+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:12:45.769+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:46.896+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:55.170+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:57.187+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:14:29.527+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:14:39.368+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2850	1423	771
2012-04-13T10:14:55.577+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T10:15:00.550+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2139	1423	771
2012-04-13T10:15:10.526+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2139	1423	771
2012-04-13T10:15:26.940+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:27.356+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:45.731+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:46.079+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:21:26.838+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:21:30.765+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3735	1423	771
2012-04-13T10:21:39.358+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2253	1423	771
2012-04-13T10:21:44.021+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2595	1423	771
2012-04-13T10:22:19.519+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:24.263+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:24.314+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:25.500+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:26.852+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:28.370+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/GettingStarted	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:28.793+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:29.622+02:00	READY	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.671+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.805+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.853+02:00	FOCUS	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:32.835+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/GettingStarted	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.266+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.755+02:00	READY	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.783+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.479+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.605+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.667+02:00	FOCUS	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.336+02:00	LINK-https://trac.seqan.de/wiki/Tutorial	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.616+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.867+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.908+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:38.553+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:38.807+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:39.375+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:39.932+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:39.953+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:47.628+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:51.228+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4007	1423	771
2012-04-13T10:22:52.401+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4007	1423	771
2012-04-13T10:22:53.134+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:53.177+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:55.010+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:23:03.017+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:25:57.053+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:06.034+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:06.488+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:06.532+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:12.763+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.201+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.530+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.904+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:19.945+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:23.264+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	211	1423	744
2012-04-13T10:26:23.643+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	211	1423	744
2012-04-13T10:26:23.969+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:24.008+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:27.995+02:00	TYPING-text-= Task 3 (Property Maps) =\n\n== Task ==\n\nAdd a vertex map to the program from task 1:\n\n a. The map shall assigns a lower-case letter to each of the seven vertices.\n    Find a way ''without'' using the function seqan:Function.assignProperty.\n a. Show that the graph is not connected by iterating through the graph in depth-first-search ordering. \n    Output the properties of the reached vertices.[[br]]\n\n\n== Solution ==\n\nOur aim is not to assign all properties at once to the vertices.\nTherefore, we create an array containing all the properties, the letters 'a' through 'h'.\n\nThe function seqan:Function.assignVertexMap does not only resize the vertex map (as seqan:Function.resizeVertexMap does) but also initializes it.\nIf we specify the optional parameter `prop`, the values from the array `prop` are assigned to the items in the property map.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=vertex-map)]]\n\nTo iterate through the graph in depth-first-search ordering we have to define an seqan:Metafunction.Iterator with the specialization seqan:"Spec.Dfs Preorder Iterator".\n\nThe vertex descriptor of the first vertex is `0` and we choose this vertex as a starting point for the depth-first-search through our graph `g` with the iterator `dfsIt`:\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=iterate-dfs)]]\n\nFor the chosen starting point, only two other vertices can be reached:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nIterate from 'a' in depth-first-search ordering: a, e, b,\n</pre>\n}}}\n\nSo, the graph is not connected.	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:28.254+02:00	TYPING-text-= Task 3 (Property Maps) =\n\n== Task ==\n\nAdd a vertex map to the program from task 1:\n\n a. The map shall assigns a lower-case letter to each of the seven vertices.\n    Find a way ''without'' using the function seqan:Function.assignProperty.\n a. Show that the graph is not connected by iterating through the graph in depth-first-search ordering. \n    Output the properties of the reached vertices.[[br]]\n\n\n== Solution ==\n\nOur aim is not to assign all properties at once to the vertices.\nTherefore, we create an array containing all the properties, the letters 'a' through 'h'.\n\nThe function seqan:Function.assignVertexMap does not only resize the vertex map (as seqan:Function.resizeVertexMap does) but also initializes it.\nIf we specify the optional parameter `prop`, the values from the array `prop` are assigned to the items in the property map.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=vertex-map)]]\n\nTo iterate through the graph in depth-first-search ordering we have to define an seqan:Metafunction.Iterator with the specialization seqan:"Spec.Dfs Preorder Iterator".\n\nThe vertex descriptor of the first vertex is `0` and we choose this vertex as a starting point for the depth-first-search through our graph `g` with the iterator `dfsIt`:\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=iterate-dfs)]]\n\nFor the chosen starting point, only two other vertices can be reached:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nIterate from 'a' in depth-first-search ordering: a, e, b,\n</pre>\n}}}\n\nSo, the graph is not connected.	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:35.729+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:36.083+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:36.125+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.126+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.513+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.570+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:53.579+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T10:27:02.673+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T11:30:46.468+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T11:31:04.761+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:31:04.966+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:05.008+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:09.518+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	570	1423	744
2012-04-13T11:31:18.720+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:19.795+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:31.673+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	342	1423	744
2012-04-13T11:31:31.865+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	342	1423	744
2012-04-13T11:31:35.687+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:31:39.275+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:31:50.449+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:32:02.572+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	417	1423	744
2012-04-13T11:32:05.299+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	759	1423	744
2012-04-13T11:32:10.818+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:32:13.579+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1215	1423	744
2012-04-13T11:32:17.729+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	987	1423	744
2012-04-13T11:32:45.169+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:33:06.479+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	228	1423	744
2012-04-13T11:33:09.973+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:33:10.406+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:33:10.591+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:33:10.642+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:33:14.430+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:18.436+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:18.655+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:19.038+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:33:19.080+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:34:21.631+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	456	1423	744
2012-04-13T11:34:25.340+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	342	1423	744
2012-04-13T11:35:18.315+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	570	1423	744
2012-04-13T11:36:06.207+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	684	1423	744
2012-04-13T11:36:15.177+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	713	1423	744
2012-04-13T11:36:18.270+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	713	1423	744
2012-04-13T11:36:18.680+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:18.720+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.530+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.672+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.678+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:26.649+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:27.641+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:27.947+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.105+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.700+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.900+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.061+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.235+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.565+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:30.060+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.744+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.930+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.937+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:38.920+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.638+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.877+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.934+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.249+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.449+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.608+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.813+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:41.245+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:41.498+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:45.330+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:46.609+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.426+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.700+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.830+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:50.847+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:50.972+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:52.441+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:54.368+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.278+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.590+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.697+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:56.736+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seq>n.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:57.125+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:57.247+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:02.309+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:02.700+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:02.743+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:04.707+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:08.886+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	225	1423	744
2012-04-13T11:37:09.671+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	225	1423	744
2012-04-13T11:37:12.982+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	681	1423	744
2012-04-13T11:37:18.515+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	681	1423	744
2012-04-13T11:37:18.660+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:20.681+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:21.889+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:22.359+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:22.615+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:22.661+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:28.695+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:29.787+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:31.217+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:39.759+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	418	1423	744
2012-04-13T11:37:40.406+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	418	1423	744
2012-04-13T11:37:43.004+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:43.083+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:43.592+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:44.091+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:44.142+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:54.696+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:38:11.439+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:28.695+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:30.220+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:31.748+02:00	READY	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:31.818+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:31.872+02:00	FOCUS	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:34.089+02:00	BLUR	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:34.331+02:00	TYPING-search-	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:34.581+02:00	TYPING-search-a	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:34.780+02:00	TYPING-search-as	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.572+02:00	TYPING-search-ass	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.694+02:00	TYPING-search-assi	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.822+02:00	TYPING-search-assig	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:36.842+02:00	TYPING-search-assign	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:37.021+02:00	TYPING-search-assign	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:37.236+02:00	TYPING-search-assignT	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:41.919+02:00	UNLOAD	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:42.010+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:42.106+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#assignTransitionProbability	87.77.83.75	-	0	0	163	744
2012-04-13T11:51:42.147+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:59.716+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:59.730+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:52:41.007+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:58:29.124+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:58:30.924+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:59:30.062+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:59:34.655+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:35.560+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:41.225+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:49.990+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T12:14:06.767+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T12:14:08.894+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	228	1423	744
2012-04-13T12:14:09.031+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:09.086+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:10.708+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:10.821+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:10.858+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:12.832+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:13.993+02:00	LINK-https://trac.seqan.de/wiki	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:14.276+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:14.538+02:00	READY	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:14.577+02:00	FOCUS	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:17.729+02:00	LINK-https://trac.seqan.de/wiki/Tutorial	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.059+02:00	UNLOAD	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.442+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.482+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:21.179+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:22.368+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/FileIO2	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:23.247+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:23.847+02:00	READY	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:23.866+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:32.666+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	3534	1423	744
2012-04-13T12:14:39.171+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	3738	1423	744
2012-04-13T12:14:44.020+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	1344	1423	744
2012-04-13T12:14:44.149+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:44.201+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:46.170+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:46.417+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:47.276+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:47.977+02:00	READY	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:47.994+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:55.255+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:57.342+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	114	1423	744
2012-04-13T12:15:09.435+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	228	1423	744
2012-04-13T12:15:15.672+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	570	1423	744
2012-04-13T12:15:18.119+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:21.753+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:15:27.052+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:15:27.176+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:27.247+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:30.068+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:16:44.433+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:32:28.515+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:32:30.364+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T09:09:04.322+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:10.178+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:11.519+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:13.022+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:15.970+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:09:25.293+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:05.459+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1466	1423	771
2012-04-13T09:11:08.720+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T09:11:15.646+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:45.146+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:11:52.120+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T09:11:56.736+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3241	1423	771
2012-04-13T09:12:06.471+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:22.944+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:33.959+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:40.951+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:42.856+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:47.288+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:49.277+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:49.466+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:12:54.535+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:30.623+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:35.065+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.693+02:00	LINK-http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.743+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:39.976+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:40.068+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.add_Edges.html	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:40.282+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#addEdges	87.77.83.75	-	0	0	163	771
2012-04-13T09:26:41.972+02:00	UNLOAD	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#addEdges	87.77.83.75	-	0	0	163	771
2012-04-13T09:26:42.135+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:42.237+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:43.778+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:43.951+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:26:44.343+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	0	1423	771
2012-04-13T09:26:44.382+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	0	1423	771
2012-04-13T09:27:04.759+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	228	1423	771
2012-04-13T09:27:48.008+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	456	1423	771
2012-04-13T09:27:50.423+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	529	1423	771
2012-04-13T09:27:52.810+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	187	1423	771
2012-04-13T09:27:53.008+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1GraphBasics	87.77.83.75	-	0	187	1423	771
2012-04-13T09:27:53.196+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:27:53.250+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:27:57.033+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1596	1423	771
2012-04-13T09:28:01.159+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1368	1423	771
2012-04-13T09:28:06.966+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	570	1423	771
2012-04-13T09:28:15.012+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T09:28:19.684+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T10:10:30.773+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	771
2012-04-13T10:10:36.457+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:36.659+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:36.836+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:37.251+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:37.290+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:48.960+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:10:49.111+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:49.157+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:51.125+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:10:53.570+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:29.783+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:31.790+02:00	LINK-http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:31.966+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2736	1423	771
2012-04-13T10:11:32.361+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:32.399+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.453+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.540+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:35.639+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#assignVertexMap	87.77.83.75	-	0	0	163	771
2012-04-13T10:11:35.689+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:11:39.408+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:12:45.769+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:46.896+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:55.170+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:13:57.187+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Vertex_Map.html	87.77.83.75	-	0	0	1423	771
2012-04-13T10:14:29.527+02:00	READY	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:14:39.368+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2850	1423	771
2012-04-13T10:14:55.577+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3963	1423	771
2012-04-13T10:15:00.550+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2139	1423	771
2012-04-13T10:15:10.526+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2139	1423	771
2012-04-13T10:15:26.940+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:27.356+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:45.731+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:15:46.079+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:21:26.838+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3393	1423	771
2012-04-13T10:21:30.765+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	3735	1423	771
2012-04-13T10:21:39.358+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2253	1423	771
2012-04-13T10:21:44.021+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2595	1423	771
2012-04-13T10:22:19.519+02:00	BLUR	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:24.263+02:00	FOCUS	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:24.314+02:00	SCROLL	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:25.500+02:00	UNLOAD	http://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:26.852+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:28.370+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/GettingStarted	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:28.793+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:29.622+02:00	READY	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.671+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.805+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:31.853+02:00	FOCUS	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:32.835+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/GettingStarted	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.266+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.755+02:00	READY	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:33.783+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.479+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/GettingStarted	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.605+02:00	READY	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:34.667+02:00	FOCUS	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.336+02:00	LINK-https://trac.seqan.de/wiki/Tutorial	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.616+02:00	UNLOAD	https://trac.seqan.de/	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.867+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:35.908+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:38.553+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:38.807+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:39.375+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	771
2012-04-13T10:22:39.932+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:39.953+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:47.628+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:51.228+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4007	1423	771
2012-04-13T10:22:52.401+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4007	1423	771
2012-04-13T10:22:53.134+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:53.177+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	771
2012-04-13T10:22:55.010+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:23:03.017+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:25:57.053+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:06.034+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:06.488+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:06.532+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:12.763+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.201+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.530+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2602	1423	744
2012-04-13T10:26:19.904+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:19.945+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:23.264+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	211	1423	744
2012-04-13T10:26:23.643+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	211	1423	744
2012-04-13T10:26:23.969+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:24.008+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:27.995+02:00	TYPING-text-= Task 3 (Property Maps) =\n\n== Task ==\n\nAdd a vertex map to the program from task 1:\n\n a. The map shall assigns a lower-case letter to each of the seven vertices.\n    Find a way ''without'' using the function seqan:Function.assignProperty.\n a. Show that the graph is not connected by iterating through the graph in depth-first-search ordering. \n    Output the properties of the reached vertices.[[br]]\n\n\n== Solution ==\n\nOur aim is not to assign all properties at once to the vertices.\nTherefore, we create an array containing all the properties, the letters 'a' through 'h'.\n\nThe function seqan:Function.assignVertexMap does not only resize the vertex map (as seqan:Function.resizeVertexMap does) but also initializes it.\nIf we specify the optional parameter `prop`, the values from the array `prop` are assigned to the items in the property map.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=vertex-map)]]\n\nTo iterate through the graph in depth-first-search ordering we have to define an seqan:Metafunction.Iterator with the specialization seqan:"Spec.Dfs Preorder Iterator".\n\nThe vertex descriptor of the first vertex is `0` and we choose this vertex as a starting point for the depth-first-search through our graph `g` with the iterator `dfsIt`:\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=iterate-dfs)]]\n\nFor the chosen starting point, only two other vertices can be reached:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nIterate from 'a' in depth-first-search ordering: a, e, b,\n</pre>\n}}}\n\nSo, the graph is not connected.	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:28.254+02:00	TYPING-text-= Task 3 (Property Maps) =\n\n== Task ==\n\nAdd a vertex map to the program from task 1:\n\n a. The map shall assigns a lower-case letter to each of the seven vertices.\n    Find a way ''without'' using the function seqan:Function.assignProperty.\n a. Show that the graph is not connected by iterating through the graph in depth-first-search ordering. \n    Output the properties of the reached vertices.[[br]]\n\n\n== Solution ==\n\nOur aim is not to assign all properties at once to the vertices.\nTherefore, we create an array containing all the properties, the letters 'a' through 'h'.\n\nThe function seqan:Function.assignVertexMap does not only resize the vertex map (as seqan:Function.resizeVertexMap does) but also initializes it.\nIf we specify the optional parameter `prop`, the values from the array `prop` are assigned to the items in the property map.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=vertex-map)]]\n\nTo iterate through the graph in depth-first-search ordering we have to define an seqan:Metafunction.Iterator with the specialization seqan:"Spec.Dfs Preorder Iterator".\n\nThe vertex descriptor of the first vertex is `0` and we choose this vertex as a starting point for the depth-first-search through our graph `g` with the iterator `dfsIt`:\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_algo_scc.cpp, fragment=iterate-dfs)]]\n\nFor the chosen starting point, only two other vertices can be reached:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nIterate from 'a' in depth-first-search ordering: a, e, b,\n</pre>\n}}}\n\nSo, the graph is not connected.	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:35.729+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T10:26:36.083+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:36.125+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.126+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment1PropertyMaps	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.513+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:44.570+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T10:26:53.579+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T10:27:02.673+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T11:30:46.468+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	2682	1423	744
2012-04-13T11:31:04.761+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:31:04.966+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:05.008+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:09.518+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	570	1423	744
2012-04-13T11:31:18.720+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:19.795+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:31:31.673+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	342	1423	744
2012-04-13T11:31:31.865+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	342	1423	744
2012-04-13T11:31:35.687+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:31:39.275+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:31:50.449+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	684	1423	744
2012-04-13T11:32:02.572+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	417	1423	744
2012-04-13T11:32:05.299+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	759	1423	744
2012-04-13T11:32:10.818+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:32:13.579+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1215	1423	744
2012-04-13T11:32:17.729+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	987	1423	744
2012-04-13T11:32:45.169+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	0	1423	744
2012-04-13T11:33:06.479+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	228	1423	744
2012-04-13T11:33:09.973+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:33:10.406+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphBasics	87.77.83.75	-	0	1443	1423	744
2012-04-13T11:33:10.591+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:33:10.642+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1710	1423	744
2012-04-13T11:33:14.430+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:18.436+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:18.655+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	4050	1423	744
2012-04-13T11:33:19.038+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:33:19.080+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:34:21.631+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	456	1423	744
2012-04-13T11:34:25.340+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	342	1423	744
2012-04-13T11:35:18.315+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	570	1423	744
2012-04-13T11:36:06.207+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	684	1423	744
2012-04-13T11:36:15.177+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	713	1423	744
2012-04-13T11:36:18.270+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	713	1423	744
2012-04-13T11:36:18.680+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:18.720+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.530+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.672+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:20.678+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:26.649+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:27.641+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqan, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:27.947+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.105+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn Seqn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.700+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:28.900+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.061+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.235+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:29.565+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:30.060+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.744+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.930+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:31.937+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:38.920+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.638+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqan provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.877+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:39.934+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent Seqn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.249+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.449+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.608+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:40.813+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:41.245+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:41.498+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:45.330+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:46.609+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.426+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqan since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.700+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:47.830+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in Seqn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:50.847+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:50.972+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:52.441+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:54.368+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.278+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqan.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.590+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:55.697+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:56.736+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seq>n.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:57.125+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:36:57.247+02:00	TYPING-text-= Task 5 (Graph Algorithms) =\n\n== Task ==\n\nExtend the program from task 2. Given the sequence `s`="CTTCATGTGAAAGCAGACGTAAGTCA".\n a. Calculate the Viterbi path of `s` and output the path as well as the probability of the path.\n b. Calculate the probability that the HMM generated `s` with the forward and backward algorithm.\n\n== Solution == \n\nIn the Graph Basics Assignment 2 we defined an HMM with three states - exon, splice, and intron.\n\nThe Viterbi path is the sequence of states that is most likely to produce a given output.\nIn !SeqAn, it can be calculated with the function seqan:Function.viterbiAlgorithm.\nThe produced output for this assignment is the DNA sequence `s`.\n\nThe first parameter of the function seqan:Function.viterbiAlgorithm is of course the HMM, and the second parameter is the sequence `s`.\nThe third parameter is an output parameter that will be filled by the function.\nSince we want to compute a sequence of states, this third parameter is a seqan:Class.String of ([seqan:Metafunction.VertexDescriptor vertex descriptors]) which assigns a state to each character of the sequence `s`.\n\nThe return value of the function seqan:Function.viterbiAlgorithm is the overall probability of this sequence of states, the Viterbi path.\n\nThe only thing left is to output the path.\nThe path is usually longer than the given sequence.\nThis is because the HMM may have silent states, e.g. the begin and end state.\nTo check if a state is silent !SeqAn provides the function seqan:Function.isSilent.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=viterbi)]]\n\nThe output of the above piece of code is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nViterbi algorithm\nProbability of best path: 1.25465e-18\nSequence:\nC,T,T,C,A,T,G,T,G,A,A,A,G,C,A,G,A,C,G,T,A,A,G,T,C,A,\nState path:\n0 (Silent),1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,3,3,3,3,3,3,4 (Silent)\n</pre>\n}}}\n\nIt is even simpler to use the forward algorithm in !SeqAn since it needs only the HMM and the sequence as parameters and returns a single probability.\nThis is the probability of the HMM to generate the given sequence.\nThe corresponding function is named seqan:Function.forwardAlgorithm.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=forward-algorithm)]]\n\nAnalogously, the function seqan:Function.backwardAlgorithm implements the backward algorithm in Seqn.\n\n[[Include(source:trunk/seqan/core/demos/tutorial/graph/graph_hmm.cpp, fragment=backward-algorithm)]]\n\nThe output of these two code fragments is:\n\n{{{\n#!html\n<pre class="wiki" style="background-color:black;color:lightgray">\nForward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\nBackward algorithm\nProbability that the HMM generated the sequence: 2.71585e-18\n</pre>\n}}}	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:02.309+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:02.700+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:02.743+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:04.707+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	567	1423	744
2012-04-13T11:37:08.886+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	225	1423	744
2012-04-13T11:37:09.671+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	225	1423	744
2012-04-13T11:37:12.982+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	681	1423	744
2012-04-13T11:37:18.515+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	681	1423	744
2012-04-13T11:37:18.660+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:20.681+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:21.889+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:22.359+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T11:37:22.615+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:22.661+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:28.695+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:29.787+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:31.217+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:39.759+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	418	1423	744
2012-04-13T11:37:40.406+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	418	1423	744
2012-04-13T11:37:43.004+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/Graphs	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:43.083+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:43.592+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:44.091+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:44.142+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:37:54.696+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:38:11.439+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:28.695+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:30.220+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:31.748+02:00	READY	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:31.818+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:31.872+02:00	FOCUS	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:34.089+02:00	BLUR	http://docs.seqan.de/seqan/dev/	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:34.331+02:00	TYPING-search-	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:34.581+02:00	TYPING-search-a	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:34.780+02:00	TYPING-search-as	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.572+02:00	TYPING-search-ass	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.694+02:00	TYPING-search-assi	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:35.822+02:00	TYPING-search-assig	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:36.842+02:00	TYPING-search-assign	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:37.021+02:00	TYPING-search-assign	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:37.236+02:00	TYPING-search-assignT	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:41.919+02:00	UNLOAD	http://docs.seqan.de/seqan/dev/INDEX_Page.html	87.77.83.75	-	0	0	180	1103
2012-04-13T11:51:42.010+02:00	READY	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:42.106+02:00	READY	http://docs.seqan.de/seqan/dev/INDEX_Function_Graph.html#assignTransitionProbability	87.77.83.75	-	0	0	163	744
2012-04-13T11:51:42.147+02:00	FOCUS	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:59.716+02:00	BLUR	http://docs.seqan.de/seqan/dev/FUNCTION.assign_Transition_Probability.html	87.77.83.75	-	0	0	1423	744
2012-04-13T11:51:59.730+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:52:41.007+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:58:29.124+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:58:30.924+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:59:30.062+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	0	1423	744
2012-04-13T11:59:34.655+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:35.560+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:41.225+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T11:59:49.990+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T12:14:06.767+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	1140	1423	744
2012-04-13T12:14:08.894+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs	87.77.83.75	-	0	228	1423	744
2012-04-13T12:14:09.031+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:09.086+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:10.708+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:10.821+02:00	READY	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:10.858+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:12.832+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:13.993+02:00	LINK-https://trac.seqan.de/wiki	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:14.276+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/Graphs/Assignment2GraphAlgorithms?action=edit	87.77.83.75	-	0	87	1423	744
2012-04-13T12:14:14.538+02:00	READY	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:14.577+02:00	FOCUS	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:17.729+02:00	LINK-https://trac.seqan.de/wiki/Tutorial	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.059+02:00	UNLOAD	https://trac.seqan.de/wiki	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.442+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:18.482+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:21.179+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:22.368+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/FileIO2	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:23.247+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:23.847+02:00	READY	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:23.866+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:32.666+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	3534	1423	744
2012-04-13T12:14:39.171+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	3738	1423	744
2012-04-13T12:14:44.020+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/FileIO2	87.77.83.75	-	0	1344	1423	744
2012-04-13T12:14:44.149+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:44.201+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:46.170+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:46.417+02:00	LINK-https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:47.276+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:14:47.977+02:00	READY	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:47.994+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:55.255+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:14:57.342+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	114	1423	744
2012-04-13T12:15:09.435+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	228	1423	744
2012-04-13T12:15:15.672+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	570	1423	744
2012-04-13T12:15:18.119+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:21.753+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:15:27.052+02:00	UNLOAD	https://trac.seqan.de/wiki/Tutorial/ReadingSequenceFiles	87.77.83.75	-	0	0	1423	744
2012-04-13T12:15:27.176+02:00	READY	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:27.247+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	798	1423	744
2012-04-13T12:15:30.068+02:00	SCROLL	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:16:44.433+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:32:28.515+02:00	FOCUS	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
2012-04-13T12:32:30.364+02:00	BLUR	https://trac.seqan.de/wiki/Tutorial	87.77.83.75	-	0	684	1423	744
